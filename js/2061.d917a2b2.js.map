{"version":3,"file":"js/2061.d917a2b2.js","mappings":"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","sources":["webpack://vue-arcgis-0905/src/components/list-item/list-item.scss","webpack://vue-arcgis-0905/src/components/list-item/list-item.tsx","webpack://vue-arcgis-0905/src/components/handle/resources.ts","webpack://vue-arcgis-0905/src/components/handle/handle.scss","webpack://vue-arcgis-0905/src/components/handle/handle.tsx","webpack://vue-arcgis-0905/src/components/list-item/resources.ts","webpack://vue-arcgis-0905/src/components/list-item/utils.ts"],"sourcesContent":[":host {\n  @apply flex flex-col bg-foreground-1;\n  --calcite-list-item-icon-color: theme(\"colors.brand\");\n}\n\n:host([filter-hidden]),\n:host([closed]) {\n  @apply hidden;\n}\n\n.wrapper--bordered {\n  border-block-end: 1px solid var(--calcite-color-border-3);\n}\n\n@include disabled();\n\n.container {\n  @apply bg-foreground-1\n  box-border\n  flex\n  flex-1\n  overflow-hidden;\n  * {\n    @apply box-border;\n  }\n}\n\n.container--hover:hover {\n  @apply bg-foreground-2 cursor-pointer;\n}\n\n.container:active {\n  @apply bg-foreground-1;\n}\n\n.container--border {\n  border-inline-start-width: theme(\"borderWidth.4\");\n  border-inline-start-style: solid;\n}\n\n.container--border-selected {\n  border-inline-start-color: theme(\"colors.brand\");\n}\n\n.container--border-unselected {\n  border-inline-start-color: transparent;\n}\n\n.container:hover {\n  &.container--border-unselected {\n    @apply border-color-1;\n  }\n}\n\n.nested-container {\n  @apply hidden flex-col\n    border-solid\n    border-0\n    border-color-3;\n\n  margin-inline-start: var(--calcite-list-item-spacing-indent, theme(\"spacing.6\"));\n}\n\n.nested-container--open {\n  @apply flex;\n}\n\n.content-container {\n  @apply text-color-2\n    select-none\n    flex\n    flex-auto\n    font-normal\n    items-stretch\n    p-0;\n}\n\ntr,\ntd {\n  @apply focus-base;\n}\n\ntr {\n  @apply relative;\n}\n\ntr:focus,\ntd:focus {\n  @apply focus-inset;\n}\n\n.content,\n.custom-content {\n  @apply text-n2-wrap\n    flex\n    flex-auto\n    flex-col\n    justify-center\n    px-3\n    py-2;\n}\n\n.label,\n.description,\n.content-bottom {\n  @apply text-n2 word-break font-sans font-normal;\n  &:only-child {\n    @apply m-0 py-1;\n  }\n}\n\n.label {\n  @apply text-color-1;\n}\n\n:host([selected]) .label {\n  @apply font-medium;\n}\n\n.description {\n  @apply text-color-3 mt-0.5;\n}\n\n:host([selected]) .description {\n  @apply text-color-2;\n}\n\n.content-start {\n  @apply justify-start;\n}\n\n.content-end {\n  @apply justify-end;\n}\n\n.content-start,\n.content-end {\n  @apply flex-auto;\n\n  ::slotted(calcite-icon) {\n    @apply self-center mx-3;\n  }\n}\n\n.content-bottom {\n  @apply flex flex-col;\n}\n\n.content-container--has-center-content .content-start,\n.content-container--has-center-content .content-end {\n  @apply flex-initial;\n}\n\n.selection-container {\n  @apply flex px-3 py-0;\n  color: theme(\"borderColor.color.input\");\n}\n\n.selection-container--single {\n  color: transparent;\n}\n\n:host(:not([disabled]):not([selected])) .container:hover .selection-container--single {\n  color: theme(\"borderColor.color.1\");\n}\n\n:host([selected]:hover) .selection-container,\n:host([selected]:hover) .selection-container--single,\n:host([selected]) .selection-container {\n  color: var(--calcite-list-item-icon-color);\n}\n\n.open-container {\n  color: theme(\"textColor.color.3\");\n}\n\n:host(:not([disabled])) .container:hover .open-container {\n  color: theme(\"textColor.color.1\");\n}\n\n.actions-start,\n.actions-end,\n.content-start,\n.content-end,\n.selection-container,\n.drag-container,\n.open-container {\n  @apply flex items-center;\n\n  calcite-action,\n  calcite-handle {\n    @apply self-stretch;\n  }\n}\n\n.open-container,\n.selection-container {\n  @apply cursor-pointer;\n}\n\n.actions-start,\n.actions-end {\n  @apply p-0 relative;\n  ::slotted(calcite-action),\n  ::slotted(calcite-action-menu),\n  ::slotted(calcite-handle),\n  ::slotted(calcite-dropdown) {\n    @apply self-stretch;\n\n    color: inherit;\n  }\n}\n\ntr:focus {\n  .actions-start,\n  .actions-end {\n    inset-block: theme(\"spacing[0.5]\");\n    .close,\n    ::slotted(calcite-action),\n    ::slotted(calcite-action-menu),\n    ::slotted(calcite-handle),\n    ::slotted(calcite-dropdown) {\n      block-size: calc(100% - theme(\"spacing[1]\"));\n    }\n  }\n\n  &::after,\n  &::before {\n    @apply absolute;\n    content: \"\";\n    inline-size: theme(\"spacing[0.5]\");\n    z-index: theme(\"zIndex.header\");\n    background-color: theme(\"colors.brand\");\n    inset-block: 0;\n  }\n  &::before {\n    inset-inline-start: 0;\n  }\n  &::after {\n    inset-inline-end: 0;\n  }\n}\n\n.container--border:focus::before {\n  display: none;\n}\n\n::slotted(calcite-list:empty) {\n  @apply border-t-0;\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  getElementDir,\n  getFirstTabbable,\n  slotChangeHasAssignedElement,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { SelectionMode } from \"../interfaces\";\nimport { SelectionAppearance } from \"../list/resources\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { SortableComponentItem } from \"../../utils/sortableComponent\";\nimport { ListItemMessages } from \"./assets/list-item/t9n\";\nimport {\n  getDepth,\n  getListItemChildren,\n  getListItemChildLists,\n  updateListItemChildren,\n} from \"./utils\";\nimport { CSS, activeCellTestAttribute, ICONS, SLOTS } from \"./resources\";\n\nconst focusMap = new Map<HTMLCalciteListElement, number>();\nconst listSelector = \"calcite-list\";\n\n/**\n * @slot - A slot for adding `calcite-list`, `calcite-list-item` and `calcite-list-item-group` elements.\n * @slot actions-start - A slot for adding actionable `calcite-action` elements before the content of the component.\n * @slot content-start - A slot for adding non-actionable elements before the label and description of the component.\n * @slot content - A slot for adding non-actionable, centered content in place of the `label` and `description` of the component.\n * @slot content-end - A slot for adding non-actionable elements after the label and description of the component.\n * @slot actions-end - A slot for adding actionable `calcite-action` elements after the content of the component.\n * @slot content-bottom - A slot for adding content below the component's `label` and `description`.\n */\n@Component({\n  tag: \"calcite-list-item\",\n  styleUrl: \"list-item.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class ListItem\n  implements\n    InteractiveComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    T9nComponent,\n    SortableComponentItem\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Sets the item as focusable. Only one item should be focusable within a list.\n   *\n   * @internal\n   */\n  @Prop() active = false;\n\n  @Watch(\"active\")\n  activeHandler(active: boolean): void {\n    if (!active) {\n      this.focusCell(null, false);\n    }\n  }\n\n  /**\n   * Sets the item to display a border.\n   *\n   * @internal\n   */\n  @Prop() bordered = false;\n\n  /** When `true`, a close button is added to the component. */\n  @Prop({ reflect: true }) closable = false;\n\n  /** When `true`, hides the component. */\n  @Prop({ reflect: true, mutable: true }) closed = false;\n\n  @Watch(\"closed\")\n  handleClosedChange(): void {\n    this.emitCalciteInternalListItemChange();\n  }\n\n  /**\n   * A description for the component. Displays below the label text.\n   */\n  @Prop() description: string;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  handleDisabledChange(): void {\n    this.emitCalciteInternalListItemChange();\n  }\n\n  /**\n   * When `true`, the item is not draggable.\n   */\n  @Prop({ reflect: true }) dragDisabled = false;\n\n  /**\n   * When `true`, the component displays a draggable button.\n   *\n   * @internal\n   */\n  @Prop() dragHandle = false;\n\n  /**\n   * When `true`, the component's drag handle is selected.\n   */\n  @Prop({ mutable: true, reflect: true }) dragSelected = false;\n\n  /**\n   * Hides the component when filtered.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) filterHidden = false;\n\n  /**\n   * The label text of the component. Displays above the description text.\n   */\n  @Prop() label: string;\n\n  /**\n   * Provides additional metadata to the component. Primary use is for a filter on the parent `calcite-list`.\n   */\n  @Prop() metadata: Record<string, unknown>;\n\n  /**\n   * When `true`, the item is open to show child components.\n   */\n  @Prop({ mutable: true, reflect: true }) open = false;\n\n  @Watch(\"open\")\n  handleOpenChange(): void {\n    this.emitCalciteInternalListItemToggle();\n  }\n\n  /**\n   * Used to specify the aria-setsize attribute to define the number of items in the current set of list for accessibility.\n   *\n   * @internal\n   */\n  @Prop() setSize: number = null;\n\n  /**\n   * Used to specify the aria-posinset attribute to define the number or position in the current set of list items for accessibility.\n   *\n   * @internal\n   */\n  @Prop() setPosition: number = null;\n\n  /**\n   * When `true` and the parent `calcite-list`'s `selectionMode` is `\"single\"`, `\"single-persist\"', or `\"multiple\"`, the component is selected.\n   */\n  @Prop({ reflect: true, mutable: true }) selected = false;\n\n  @Watch(\"selected\")\n  handleSelectedChange(): void {\n    this.calciteInternalListItemSelect.emit();\n  }\n\n  /**\n   * The component's value.\n   */\n  @Prop() value: any;\n\n  /**\n   * Specifies the selection mode - `\"multiple\"` (allow any number of selected items), `\"single\"` (allow one selected item), `\"single-persist\"` (allow one selected item and prevent de-selection), or `\"none\"` (no selected items).\n   *\n   * @internal\n   */\n  @Prop({ mutable: true }) selectionMode: Extract<\n    \"none\" | \"multiple\" | \"single\" | \"single-persist\",\n    SelectionMode\n  > = null;\n\n  /**\n   * Specifies the selection appearance - `\"icon\"` (displays a checkmark or dot) or `\"border\"` (displays a border).\n   *\n   * @internal\n   */\n  @Prop({ mutable: true }) selectionAppearance: SelectionAppearance = null;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ListItemMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ListItemMessages;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the component is selected.\n   */\n  @Event({ cancelable: false }) calciteListItemSelect: EventEmitter<void>;\n\n  /**\n   * Fires when the close button is clicked.\n   */\n  @Event({ cancelable: false }) calciteListItemClose: EventEmitter<void>;\n\n  /**\n   * Fires when the drag handle is selected.\n   */\n  @Event({ cancelable: false }) calciteListItemDragHandleChange: EventEmitter<void>;\n\n  /**\n   * Fires when the open button is clicked.\n   */\n  @Event({ cancelable: false }) calciteListItemToggle: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemSelect: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false })\n  calciteInternalListItemSelectMultiple: EventEmitter<{\n    selectMultiple: boolean;\n  }>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemActive: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalFocusPreviousItem: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemChange: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemToggle: EventEmitter<void>;\n\n  @Listen(\"calciteInternalListItemGroupDefaultSlotChange\")\n  @Listen(\"calciteInternalListDefaultSlotChange\")\n  handleCalciteInternalListDefaultSlotChanges(event: CustomEvent<void>): void {\n    event.stopPropagation();\n    this.handleOpenableChange(this.defaultSlotEl);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteListItemElement;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ListItemMessages;\n\n  @State() level: number = null;\n\n  @State() parentListEl: HTMLCalciteListElement;\n\n  @State() openable = false;\n\n  @State() hasActionsStart = false;\n\n  @State() hasActionsEnd = false;\n\n  @State() hasCustomContent = false;\n\n  @State() hasContentStart = false;\n\n  @State() hasContentEnd = false;\n\n  @State() hasContentBottom = false;\n\n  containerEl: HTMLTableRowElement;\n\n  contentEl: HTMLTableCellElement;\n\n  actionsStartEl: HTMLTableCellElement;\n\n  actionsEndEl: HTMLTableCellElement;\n\n  handleGridEl: HTMLTableCellElement;\n\n  defaultSlotEl: HTMLSlotElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n    const { el } = this;\n    this.parentListEl = el.closest(listSelector);\n    this.level = getDepth(el) + 1;\n    this.setSelectionDefaults();\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    const { containerEl, parentListEl } = this;\n    const focusIndex = focusMap.get(parentListEl);\n\n    if (typeof focusIndex === \"number\") {\n      const cells = this.getGridCells();\n      if (cells[focusIndex]) {\n        this.focusCell(cells[focusIndex]);\n      } else {\n        containerEl?.focus();\n      }\n      return;\n    }\n\n    containerEl?.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderSelected(): VNode {\n    const { selected, selectionMode, selectionAppearance } = this;\n\n    if (selectionMode === \"none\" || selectionAppearance === \"border\") {\n      return null;\n    }\n\n    return (\n      <td\n        class={{\n          [CSS.selectionContainer]: true,\n          [CSS.selectionContainerSingle]:\n            selectionMode === \"single\" || selectionMode === \"single-persist\",\n        }}\n        key=\"selection-container\"\n        onClick={this.handleItemClick}\n      >\n        <calcite-icon\n          icon={\n            selected\n              ? selectionMode === \"multiple\"\n                ? ICONS.selectedMultiple\n                : ICONS.selectedSingle\n              : selectionMode === \"multiple\"\n                ? ICONS.unselectedMultiple\n                : ICONS.unselectedSingle\n          }\n          scale=\"s\"\n        />\n      </td>\n    );\n  }\n\n  renderDragHandle(): VNode {\n    const { label, dragHandle, dragSelected, dragDisabled, setPosition, setSize } = this;\n\n    return dragHandle ? (\n      <td\n        aria-label={label}\n        class={CSS.dragContainer}\n        key=\"drag-handle-container\"\n        onFocusin={this.focusCellHandle}\n        ref={(el) => (this.handleGridEl = el)}\n        role=\"gridcell\"\n      >\n        <calcite-handle\n          disabled={dragDisabled}\n          label={label}\n          onCalciteHandleChange={this.dragHandleSelectedChangeHandler}\n          selected={dragSelected}\n          setPosition={setPosition}\n          setSize={setSize}\n        />\n      </td>\n    ) : null;\n  }\n\n  renderOpen(): VNode {\n    const { el, open, openable, messages } = this;\n    const dir = getElementDir(el);\n    const icon = open ? ICONS.open : dir === \"rtl\" ? ICONS.closedRTL : ICONS.closedLTR;\n    const tooltip = open ? messages.collapse : messages.expand;\n\n    return openable ? (\n      <td\n        class={CSS.openContainer}\n        key=\"open-container\"\n        onClick={this.handleToggleClick}\n        title={tooltip}\n      >\n        <calcite-icon icon={icon} key={icon} scale=\"s\" />\n      </td>\n    ) : null;\n  }\n\n  renderActionsStart(): VNode {\n    const { label, hasActionsStart } = this;\n    return (\n      <td\n        aria-label={label}\n        class={CSS.actionsStart}\n        hidden={!hasActionsStart}\n        key=\"actions-start-container\"\n        onFocusin={this.focusCellActionsStart}\n        ref={(el) => (this.actionsStartEl = el)}\n        role=\"gridcell\"\n      >\n        <slot name={SLOTS.actionsStart} onSlotchange={this.handleActionsStartSlotChange} />\n      </td>\n    );\n  }\n\n  renderActionsEnd(): VNode {\n    const { label, hasActionsEnd, closable, messages } = this;\n    return (\n      <td\n        aria-label={label}\n        class={CSS.actionsEnd}\n        hidden={!(hasActionsEnd || closable)}\n        key=\"actions-end-container\"\n        onFocusin={this.focusCellActionsEnd}\n        ref={(el) => (this.actionsEndEl = el)}\n        role=\"gridcell\"\n      >\n        <slot name={SLOTS.actionsEnd} onSlotchange={this.handleActionsEndSlotChange} />\n        {closable ? (\n          <calcite-action\n            appearance=\"transparent\"\n            class={CSS.close}\n            icon={ICONS.close}\n            key=\"close-action\"\n            label={messages.close}\n            onClick={this.handleCloseClick}\n            text={messages.close}\n          />\n        ) : null}\n      </td>\n    );\n  }\n\n  renderContentStart(): VNode {\n    const { hasContentStart } = this;\n    return (\n      <div class={CSS.contentStart} hidden={!hasContentStart}>\n        <slot name={SLOTS.contentStart} onSlotchange={this.handleContentStartSlotChange} />\n      </div>\n    );\n  }\n\n  renderCustomContent(): VNode {\n    const { hasCustomContent } = this;\n    return (\n      <div class={CSS.customContent} hidden={!hasCustomContent}>\n        <slot name={SLOTS.content} onSlotchange={this.handleContentSlotChange} />\n      </div>\n    );\n  }\n\n  renderContentEnd(): VNode {\n    const { hasContentEnd } = this;\n    return (\n      <div class={CSS.contentEnd} hidden={!hasContentEnd}>\n        <slot name={SLOTS.contentEnd} onSlotchange={this.handleContentEndSlotChange} />\n      </div>\n    );\n  }\n\n  renderContentBottom(): VNode {\n    const { hasContentBottom } = this;\n    return (\n      <div class={CSS.contentBottom} hidden={!hasContentBottom}>\n        <slot name={SLOTS.contentBottom} onSlotchange={this.handleContentBottomSlotChange} />\n      </div>\n    );\n  }\n\n  renderDefaultContainer(): VNode {\n    return (\n      <div\n        class={{\n          [CSS.nestedContainer]: true,\n          [CSS.nestedContainerOpen]: this.openable && this.open,\n        }}\n      >\n        <slot\n          onSlotchange={this.handleDefaultSlotChange}\n          ref={(el: HTMLSlotElement) => (this.defaultSlotEl = el)}\n        />\n      </div>\n    );\n  }\n\n  renderContentProperties(): VNode {\n    const { label, description, hasCustomContent } = this;\n\n    return !hasCustomContent && (!!label || !!description) ? (\n      <div class={CSS.content} key=\"content\">\n        {label ? (\n          <div class={CSS.label} key=\"label\">\n            {label}\n          </div>\n        ) : null}\n        {description ? (\n          <div class={CSS.description} key=\"description\">\n            {description}\n          </div>\n        ) : null}\n      </div>\n    ) : null;\n  }\n\n  renderContentContainer(): VNode {\n    const { description, label, selectionMode, hasCustomContent } = this;\n    const hasCenterContent = hasCustomContent || !!label || !!description;\n    const content = [\n      this.renderContentStart(),\n      this.renderCustomContent(),\n      this.renderContentProperties(),\n      this.renderContentEnd(),\n    ];\n\n    return (\n      <td\n        aria-label={label}\n        class={{\n          [CSS.contentContainer]: true,\n          [CSS.contentContainerSelectable]: selectionMode !== \"none\",\n          [CSS.contentContainerHasCenterContent]: hasCenterContent,\n        }}\n        key=\"content-container\"\n        onClick={this.handleItemClick}\n        onFocusin={this.focusCellContent}\n        ref={(el) => (this.contentEl = el)}\n        role=\"gridcell\"\n      >\n        {content}\n      </td>\n    );\n  }\n\n  render(): VNode {\n    const {\n      openable,\n      open,\n      level,\n      setPosition,\n      setSize,\n      active,\n      label,\n      selected,\n      selectionAppearance,\n      selectionMode,\n      closed,\n      filterHidden,\n      bordered,\n      disabled,\n    } = this;\n\n    const showBorder = selectionMode !== \"none\" && selectionAppearance === \"border\";\n    const borderSelected = showBorder && selected;\n    const borderUnselected = showBorder && !selected;\n\n    return (\n      <Host>\n        <InteractiveContainer disabled={disabled}>\n          <div class={{ [CSS.wrapper]: true, [CSS.wrapperBordered]: bordered }}>\n            <tr\n              aria-expanded={openable ? toAriaBoolean(open) : null}\n              aria-label={label}\n              aria-level={level}\n              aria-posinset={setPosition}\n              aria-selected={toAriaBoolean(selected)}\n              aria-setsize={setSize}\n              class={{\n                [CSS.container]: true,\n                [CSS.containerHover]: true,\n                [CSS.containerBorder]: showBorder,\n                [CSS.containerBorderSelected]: borderSelected,\n                [CSS.containerBorderUnselected]: borderUnselected,\n              }}\n              hidden={closed || filterHidden}\n              onFocus={this.focusCellNull}\n              onFocusin={this.emitInternalListItemActive}\n              onKeyDown={this.handleItemKeyDown}\n              ref={(el) => (this.containerEl = el)}\n              role=\"row\"\n              tabIndex={active ? 0 : -1}\n            >\n              {this.renderDragHandle()}\n              {this.renderSelected()}\n              {this.renderOpen()}\n              {this.renderActionsStart()}\n              {this.renderContentContainer()}\n              {this.renderActionsEnd()}\n            </tr>\n            {this.renderContentBottom()}\n          </div>\n          {this.renderDefaultContainer()}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private dragHandleSelectedChangeHandler = (event: CustomEvent): void => {\n    this.dragSelected = (event.target as HTMLCalciteHandleElement).selected;\n    this.calciteListItemDragHandleChange.emit();\n    event.stopPropagation();\n  };\n\n  private emitInternalListItemActive = (): void => {\n    this.calciteInternalListItemActive.emit();\n  };\n\n  private focusCellHandle = (): void => {\n    this.handleCellFocusIn(this.handleGridEl);\n  };\n\n  private focusCellActionsStart = (): void => {\n    this.handleCellFocusIn(this.actionsStartEl);\n  };\n\n  private focusCellContent = (): void => {\n    this.handleCellFocusIn(this.contentEl);\n  };\n\n  private focusCellActionsEnd = (): void => {\n    this.handleCellFocusIn(this.actionsEndEl);\n  };\n\n  private emitCalciteInternalListItemToggle(): void {\n    this.calciteInternalListItemToggle.emit();\n  }\n\n  private emitCalciteInternalListItemChange(): void {\n    this.calciteInternalListItemChange.emit();\n  }\n\n  private handleCloseClick = (): void => {\n    this.closed = true;\n    this.calciteListItemClose.emit();\n  };\n\n  private handleContentSlotChange = (event: Event): void => {\n    this.hasCustomContent = slotChangeHasAssignedElement(event);\n  };\n\n  private handleActionsStartSlotChange = (event: Event): void => {\n    this.hasActionsStart = slotChangeHasAssignedElement(event);\n  };\n\n  private handleActionsEndSlotChange = (event: Event): void => {\n    this.hasActionsEnd = slotChangeHasAssignedElement(event);\n  };\n\n  private handleContentStartSlotChange = (event: Event): void => {\n    this.hasContentStart = slotChangeHasAssignedElement(event);\n  };\n\n  private handleContentEndSlotChange = (event: Event): void => {\n    this.hasContentEnd = slotChangeHasAssignedElement(event);\n  };\n\n  private handleContentBottomSlotChange = (event: Event): void => {\n    this.hasContentBottom = slotChangeHasAssignedElement(event);\n  };\n\n  private setSelectionDefaults(): void {\n    const { parentListEl, selectionMode, selectionAppearance } = this;\n\n    if (!parentListEl) {\n      return;\n    }\n\n    if (!selectionMode) {\n      this.selectionMode = parentListEl.selectionMode;\n    }\n\n    if (!selectionAppearance) {\n      this.selectionAppearance = parentListEl.selectionAppearance;\n    }\n  }\n\n  private handleOpenableChange(slotEl: HTMLSlotElement): void {\n    if (!slotEl) {\n      return;\n    }\n\n    const listItemChildren = getListItemChildren(slotEl);\n    const listItemChildLists = getListItemChildLists(slotEl);\n    updateListItemChildren(listItemChildren);\n\n    this.openable = !!listItemChildren.length || !!listItemChildLists.length;\n  }\n\n  private handleDefaultSlotChange = (event: Event): void => {\n    this.handleOpenableChange(event.target as HTMLSlotElement);\n  };\n\n  private handleToggleClick = (): void => {\n    this.toggle();\n  };\n\n  private toggle = (value = !this.open): void => {\n    this.open = value;\n    this.calciteListItemToggle.emit();\n  };\n\n  private handleItemClick = (event: PointerEvent): void => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    this.toggleSelected(event.shiftKey);\n  };\n\n  private toggleSelected = (shiftKey: boolean): void => {\n    const { selectionMode, selected } = this;\n\n    if (this.disabled) {\n      return;\n    }\n\n    if (selectionMode === \"multiple\" || selectionMode === \"single\") {\n      this.selected = !selected;\n    } else if (selectionMode === \"single-persist\") {\n      this.selected = true;\n    }\n\n    this.calciteInternalListItemSelectMultiple.emit({\n      selectMultiple: shiftKey && selectionMode === \"multiple\",\n    });\n    this.calciteListItemSelect.emit();\n  };\n\n  private getGridCells(): HTMLTableCellElement[] {\n    return [this.handleGridEl, this.actionsStartEl, this.contentEl, this.actionsEndEl].filter(\n      (el) => el && !el.hidden,\n    );\n  }\n\n  private handleItemKeyDown = (event: KeyboardEvent): void => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    const { key } = event;\n    const composedPath = event.composedPath();\n    const { containerEl, actionsStartEl, actionsEndEl, open, openable } = this;\n\n    const cells = this.getGridCells();\n    const currentIndex = cells.findIndex((cell) => composedPath.includes(cell));\n\n    if (\n      key === \"Enter\" &&\n      !composedPath.includes(actionsStartEl) &&\n      !composedPath.includes(actionsEndEl)\n    ) {\n      event.preventDefault();\n      this.toggleSelected(event.shiftKey);\n    } else if (key === \"ArrowRight\") {\n      event.preventDefault();\n      const nextIndex = currentIndex + 1;\n      if (currentIndex === -1) {\n        if (!open && openable) {\n          this.toggle(true);\n          this.focusCell(null);\n        } else if (cells[0]) {\n          this.focusCell(cells[0]);\n        }\n      } else if (cells[currentIndex] && cells[nextIndex]) {\n        this.focusCell(cells[nextIndex]);\n      }\n    } else if (key === \"ArrowLeft\") {\n      event.preventDefault();\n      const prevIndex = currentIndex - 1;\n      if (currentIndex === -1) {\n        this.focusCell(null);\n        if (open && openable) {\n          this.toggle(false);\n        } else {\n          this.calciteInternalFocusPreviousItem.emit();\n        }\n      } else if (currentIndex === 0) {\n        this.focusCell(null);\n        containerEl.focus();\n      } else if (cells[currentIndex] && cells[prevIndex]) {\n        this.focusCell(cells[prevIndex]);\n      }\n    }\n  };\n\n  private focusCellNull = (): void => {\n    this.focusCell(null);\n  };\n\n  private handleCellFocusIn = (focusEl: HTMLTableCellElement): void => {\n    this.setFocusCell(focusEl, getFirstTabbable(focusEl), true);\n  };\n\n  // Only one cell within a list-item should be focusable at a time. Ensures the active cell is focusable.\n  private setFocusCell = (\n    focusEl: HTMLTableCellElement | null,\n    focusedEl: HTMLElement,\n    saveFocusIndex: boolean,\n  ): void => {\n    const { parentListEl } = this;\n\n    if (saveFocusIndex) {\n      focusMap.set(parentListEl, null);\n    }\n\n    const gridCells = this.getGridCells();\n\n    gridCells.forEach((tableCell) => {\n      tableCell.tabIndex = -1;\n      tableCell.removeAttribute(activeCellTestAttribute);\n    });\n\n    if (!focusEl) {\n      return;\n    }\n\n    focusEl.tabIndex = focusEl === focusedEl ? 0 : -1;\n    focusEl.setAttribute(activeCellTestAttribute, \"\");\n\n    if (saveFocusIndex) {\n      focusMap.set(parentListEl, gridCells.indexOf(focusEl));\n    }\n  };\n\n  private focusCell = (focusEl: HTMLTableCellElement | null, saveFocusIndex = true): void => {\n    const focusedEl = getFirstTabbable(focusEl);\n    this.setFocusCell(focusEl, focusedEl, saveFocusIndex);\n    focusedEl?.focus();\n  };\n}\n","export const CSS = {\n  handle: \"handle\",\n  handleSelected: \"handle--selected\",\n};\n\nexport const ICONS = {\n  drag: \"drag\",\n} as const;\n\nexport const SUBSTITUTIONS = {\n  itemLabel: \"{itemLabel}\",\n  position: \"{position}\",\n  total: \"{total}\",\n};\n",":host {\n  @apply flex;\n}\n\n.handle {\n  @apply focus-base\n    flex\n    items-center\n    justify-center\n    self-stretch\n    border-none;\n  color: theme(\"borderColor.color.input\");\n  padding-block: theme(\"spacing.3\");\n  padding-inline: theme(\"spacing.1\");\n  line-height: 0;\n\n  calcite-icon {\n    color: inherit;\n  }\n}\n\n:host(:not([disabled])) .handle {\n  @apply cursor-move;\n  &:hover {\n    @apply bg-foreground-2 text-color-1;\n  }\n  &:focus {\n    @apply text-color-1 focus-inset;\n  }\n  &--selected {\n    @apply bg-foreground-3 text-color-1;\n  }\n}\n\n@include disabled();\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { toAriaBoolean } from \"../../utils/dom\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { HandleMessages } from \"./assets/handle/t9n\";\nimport { HandleChange, HandleNudge } from \"./interfaces\";\nimport { CSS, ICONS, SUBSTITUTIONS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-handle\",\n  styleUrl: \"handle.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Handle implements LoadableComponent, T9nComponent, InteractiveComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component is selected.\n   */\n  @Prop({ mutable: true, reflect: true }) selected = false;\n\n  @Watch(\"messages\")\n  @Watch(\"label\")\n  @Watch(\"selected\")\n  @Watch(\"setPosition\")\n  @Watch(\"setSize\")\n  handleAriaTextChange(): void {\n    const message = this.getAriaText(\"live\");\n\n    if (message) {\n      this.calciteInternalAssistiveTextChange.emit({\n        message,\n      });\n    }\n  }\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * Value for the button title attribute.\n   */\n  @Prop({ reflect: true }) dragHandle: string;\n\n  /**\n   * Made into a prop for testing purposes only.\n   *\n   * @internal\n   * @readonly\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: HandleMessages;\n\n  /**\n   *\n   *\n   * @internal\n   */\n  @Prop() setPosition: number;\n\n  /**\n   *\n   *\n   * @internal\n   */\n  @Prop() setSize: number;\n\n  /**\n   *\n   *\n   * @internal\n   */\n  @Prop() label: string;\n\n  /**\n   * When `true`, disables unselecting the component when blurred.\n   *\n   * @internal\n   */\n  @Prop() blurUnselectDisabled = false;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<HandleMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectMessages(this);\n    connectLocalized(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectMessages(this);\n    disconnectLocalized(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteHandleElement;\n\n  handleButton: HTMLElement;\n\n  @State() effectiveLocale: string;\n\n  @State() defaultMessages: HandleMessages;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires whenever the component is selected or unselected.\n   *\n   */\n  @Event({ cancelable: false }) calciteHandleChange: EventEmitter<void>;\n\n  /**\n   * Fires when the handle is selected and the up or down arrow key is pressed.\n   */\n  @Event({ cancelable: false }) calciteHandleNudge: EventEmitter<HandleNudge>;\n\n  /**\n   * Fires when the assistive text has changed.\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalAssistiveTextChange: EventEmitter<HandleChange>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    this.handleButton?.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private getTooltip(): string {\n    const { label, messages } = this;\n\n    if (!messages) {\n      return \"\";\n    }\n\n    if (!label) {\n      return messages.dragHandleUntitled;\n    }\n\n    return messages.dragHandle.replace(SUBSTITUTIONS.itemLabel, label);\n  }\n\n  getAriaText(type: \"label\" | \"live\"): string {\n    const { setPosition, setSize, label, messages, selected } = this;\n\n    if (!messages || !label || typeof setSize !== \"number\" || typeof setPosition !== \"number\") {\n      return null;\n    }\n\n    const text =\n      type === \"label\"\n        ? selected\n          ? messages.dragHandleChange\n          : messages.dragHandleIdle\n        : selected\n          ? messages.dragHandleActive\n          : messages.dragHandleCommit;\n\n    const replacePosition = text.replace(SUBSTITUTIONS.position, setPosition.toString());\n    const replaceLabel = replacePosition.replace(SUBSTITUTIONS.itemLabel, label);\n    return replaceLabel.replace(SUBSTITUTIONS.total, setSize.toString());\n  }\n\n  handleKeyDown = (event: KeyboardEvent): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    switch (event.key) {\n      case \" \":\n        this.selected = !this.selected;\n        this.calciteHandleChange.emit();\n        event.preventDefault();\n        break;\n      case \"ArrowUp\":\n        if (!this.selected) {\n          return;\n        }\n        event.preventDefault();\n        this.calciteHandleNudge.emit({ direction: \"up\" });\n        break;\n      case \"ArrowDown\":\n        if (!this.selected) {\n          return;\n        }\n        event.preventDefault();\n        this.calciteHandleNudge.emit({ direction: \"down\" });\n        break;\n    }\n  };\n\n  handleBlur = (): void => {\n    if (this.blurUnselectDisabled || this.disabled) {\n      return;\n    }\n\n    if (this.selected) {\n      this.selected = false;\n      this.calciteHandleChange.emit();\n    }\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    return (\n      // Needs to be a span because of https://github.com/SortableJS/Sortable/issues/1486\n      <span\n        aria-checked={this.disabled ? null : toAriaBoolean(this.selected)}\n        aria-disabled={this.disabled ? toAriaBoolean(this.disabled) : null}\n        aria-label={this.disabled ? null : this.getAriaText(\"label\")}\n        class={{ [CSS.handle]: true, [CSS.handleSelected]: !this.disabled && this.selected }}\n        onBlur={this.handleBlur}\n        onKeyDown={this.handleKeyDown}\n        ref={(el): void => {\n          this.handleButton = el;\n        }}\n        // role of radio is being applied to allow space key to select in screen readers\n        role=\"radio\"\n        tabIndex={this.disabled ? null : 0}\n        title={this.getTooltip()}\n      >\n        <calcite-icon icon={ICONS.drag} scale=\"s\" />\n      </span>\n    );\n  }\n}\n","export const CSS = {\n  wrapper: \"wrapper\",\n  wrapperBordered: \"wrapper--bordered\",\n  container: \"container\",\n  containerHover: \"container--hover\",\n  containerBorder: \"container--border\",\n  containerBorderSelected: \"container--border-selected\",\n  containerBorderUnselected: \"container--border-unselected\",\n  contentContainer: \"content-container\",\n  contentContainerSelectable: \"content-container--selectable\",\n  contentContainerHasCenterContent: \"content-container--has-center-content\",\n  nestedContainer: \"nested-container\",\n  nestedContainerOpen: \"nested-container--open\",\n  content: \"content\",\n  customContent: \"custom-content\",\n  actionsStart: \"actions-start\",\n  contentStart: \"content-start\",\n  label: \"label\",\n  description: \"description\",\n  contentEnd: \"content-end\",\n  contentBottom: \"content-bottom\",\n  actionsEnd: \"actions-end\",\n  selectionContainer: \"selection-container\",\n  selectionContainerSingle: \"selection-container--single\",\n  openContainer: \"open-container\",\n  dragContainer: \"drag-container\",\n  close: \"close\",\n};\n\nexport const SLOTS = {\n  actionsStart: \"actions-start\",\n  contentStart: \"content-start\",\n  content: \"content\",\n  contentBottom: \"content-bottom\",\n  contentEnd: \"content-end\",\n  actionsEnd: \"actions-end\",\n};\n\n// Set to zero to extend until the end of the table section.\nexport const MAX_COLUMNS = 0;\n\nexport const ICONS = {\n  selectedMultiple: \"check-square-f\",\n  selectedSingle: \"bullet-point-large\",\n  unselectedMultiple: \"square\",\n  unselectedSingle: \"bullet-point-large\",\n  closedLTR: \"chevron-right\",\n  closedRTL: \"chevron-left\",\n  open: \"chevron-down\",\n  blank: \"blank\",\n  close: \"x\",\n} as const;\n\nexport const activeCellTestAttribute = \"data-test-active\";\n","import { isBrowser } from \"../../utils/browser\";\n\nconst listSelector = \"calcite-list\";\nconst listItemGroupSelector = \"calcite-list-item-group\";\nconst listItemSelector = \"calcite-list-item\";\n\nexport function getListItemChildLists(slotEl: HTMLSlotElement): HTMLCalciteListElement[] {\n  return Array.from(\n    slotEl.assignedElements({ flatten: true }).filter((el) => el.matches(listSelector)),\n  ) as HTMLCalciteListElement[];\n}\n\nexport function getListItemChildren(slotEl: HTMLSlotElement): HTMLCalciteListItemElement[] {\n  const assignedElements = slotEl.assignedElements({ flatten: true });\n\n  const listItemGroupChildren = (\n    assignedElements.filter((el) => el?.matches(listItemGroupSelector)) as HTMLCalciteListItemGroupElement[]\n  )\n    .map((group) => Array.from(group.querySelectorAll(listItemSelector)))\n    .reduce((previousValue, currentValue) => [...previousValue, ...currentValue], []);\n\n  const listItemChildren = assignedElements.filter((el) =>\n    el?.matches(listItemSelector),\n  ) as HTMLCalciteListItemElement[];\n\n  const listItemListChildren = (assignedElements.filter((el) => el?.matches(listSelector)) as HTMLCalciteListElement[])\n    .map((list) => Array.from(list.querySelectorAll(listItemSelector)))\n    .reduce((previousValue, currentValue) => [...previousValue, ...currentValue], []);\n\n  return [...listItemListChildren, ...listItemGroupChildren, ...listItemChildren];\n}\n\nexport function updateListItemChildren(listItemChildren: HTMLCalciteListItemElement[]): void {\n  listItemChildren.forEach((listItem) => {\n    listItem.setPosition = listItemChildren.indexOf(listItem) + 1;\n    listItem.setSize = listItemChildren.length;\n  });\n}\n\nexport function getDepth(element: HTMLElement, includeGroup = false): number {\n  if (!isBrowser()) {\n    return 0;\n  }\n\n  const expression = includeGroup\n    ? \"ancestor::calcite-list-item | ancestor::calcite-list-item-group\"\n    : \"ancestor::calcite-list-item\";\n\n  const result = document.evaluate(expression, element, null, XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE, null);\n\n  return result.snapshotLength;\n}\n"],"names":["listItemCss","CalciteListItemStyle0","focusMap","Map","listSelector","ListItem","proxyCustomElement","HTMLElement","dragHandleSelectedChangeHandler","event","this","dragSelected","target","selected","calciteListItemDragHandleChange","emit","stopPropagation","emitInternalListItemActive","calciteInternalListItemActive","focusCellHandle","handleCellFocusIn","handleGridEl","focusCellActionsStart","actionsStartEl","focusCellContent","contentEl","focusCellActionsEnd","actionsEndEl","handleCloseClick","closed","calciteListItemClose","handleContentSlotChange","hasCustomContent","slotChangeHasAssignedElement","handleActionsStartSlotChange","hasActionsStart","handleActionsEndSlotChange","hasActionsEnd","handleContentStartSlotChange","hasContentStart","handleContentEndSlotChange","hasContentEnd","handleContentBottomSlotChange","hasContentBottom","handleDefaultSlotChange","handleOpenableChange","handleToggleClick","toggle","value","open","calciteListItemToggle","handleItemClick","defaultPrevented","toggleSelected","shiftKey","selectionMode","disabled","calciteInternalListItemSelectMultiple","selectMultiple","calciteListItemSelect","handleItemKeyDown","key","composedPath","containerEl","openable","cells","getGridCells","currentIndex","findIndex","cell","includes","preventDefault","nextIndex","focusCell","prevIndex","calciteInternalFocusPreviousItem","focus","focusCellNull","focusEl","setFocusCell","getFirstTabbable","focusedEl","saveFocusIndex","parentListEl","set","gridCells","forEach","tableCell","tabIndex","removeAttribute","activeCellTestAttribute","setAttribute","indexOf","activeHandler","active","handleClosedChange","emitCalciteInternalListItemChange","handleDisabledChange","handleOpenChange","emitCalciteInternalListItemToggle","handleSelectedChange","calciteInternalListItemSelect","onMessagesChange","handleCalciteInternalListDefaultSlotChanges","defaultSlotEl","effectiveLocaleChange","updateMessages","effectiveLocale","connectedCallback","connectInteractive","connectLocalized","connectMessages","el","closest","level","getDepth","setSelectionDefaults","componentWillLoad","setUpLoadableComponent","setUpMessages","componentDidLoad","setComponentLoaded","componentDidRender","updateHostInteraction","disconnectedCallback","disconnectInteractive","disconnectLocalized","disconnectMessages","setFocus","componentFocusable","focusIndex","get","renderSelected","selectionAppearance","h","class","CSS","selectionContainer","selectionContainerSingle","onClick","icon","ICONS","selectedMultiple","selectedSingle","unselectedMultiple","unselectedSingle","scale","renderDragHandle","label","dragHandle","dragDisabled","setPosition","setSize","dragContainer","onFocusin","ref","role","onCalciteHandleChange","renderOpen","messages","dir","getElementDir","closedRTL","closedLTR","tooltip","collapse","expand","openContainer","title","renderActionsStart","actionsStart","hidden","name","SLOTS","onSlotchange","renderActionsEnd","closable","actionsEnd","appearance","close","text","renderContentStart","contentStart","renderCustomContent","customContent","content","renderContentEnd","contentEnd","renderContentBottom","contentBottom","renderDefaultContainer","nestedContainer","nestedContainerOpen","renderContentProperties","description","renderContentContainer","hasCenterContent","contentContainer","contentContainerSelectable","contentContainerHasCenterContent","render","filterHidden","bordered","showBorder","borderSelected","borderUnselected","Host","InteractiveContainer","wrapper","wrapperBordered","toAriaBoolean","container","containerHover","containerBorder","containerBorderSelected","containerBorderUnselected","onFocus","onKeyDown","calciteInternalListItemToggle","calciteInternalListItemChange","slotEl","listItemChildren","getListItemChildren","listItemChildLists","getListItemChildLists","updateListItemChildren","length","filter","handle","handleSelected","drag","SUBSTITUTIONS","itemLabel","position","total","handleCss","CalciteHandleStyle0","Handle","handleKeyDown","calciteHandleChange","calciteHandleNudge","direction","handleBlur","blurUnselectDisabled","handleAriaTextChange","message","getAriaText","calciteInternalAssistiveTextChange","handleButton","getTooltip","replace","dragHandleUntitled","type","dragHandleChange","dragHandleIdle","dragHandleActive","dragHandleCommit","replacePosition","toString","replaceLabel","onBlur","MAX_COLUMNS","blank","listItemGroupSelector","listItemSelector","Array","from","assignedElements","flatten","matches","listItemGroupChildren","map","group","querySelectorAll","reduce","previousValue","currentValue","listItemListChildren","list","listItem","element","includeGroup","isBrowser","expression","result","document","evaluate","XPathResult","UNORDERED_NODE_SNAPSHOT_TYPE","snapshotLength"],"sourceRoot":""}