{"version":3,"file":"js/4205.e01a831e.js","mappings":"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","sources":["webpack://vue-arcgis-0905/src/components/functional/Validation.tsx","webpack://vue-arcgis-0905/src/components/select/resources.ts","webpack://vue-arcgis-0905/src/components/select/select.scss","webpack://vue-arcgis-0905/src/components/select/select.tsx","webpack://vue-arcgis-0905/src/components/icon/resources.ts","webpack://vue-arcgis-0905/src/components/icon/utils.ts","webpack://vue-arcgis-0905/src/components/icon/icon.scss","webpack://vue-arcgis-0905/src/components/icon/icon.tsx","webpack://vue-arcgis-0905/src/components/input-message/interfaces.ts","webpack://vue-arcgis-0905/src/components/input-message/input-message.scss","webpack://vue-arcgis-0905/src/components/input-message/input-message.tsx","webpack://vue-arcgis-0905/src/utils/observers.ts"],"sourcesContent":["import { FunctionalComponent, h, VNode } from \"@stencil/core\";\nimport { JSXBase } from \"@stencil/core/internal\";\nimport { Scale, Status } from \"../interfaces\";\nimport { IconNameOrString } from \"../icon/interfaces\";\n\ninterface ValidationProps extends JSXBase.HTMLAttributes {\n  scale: Scale;\n  status: Status;\n  icon?: IconNameOrString | boolean;\n  id?: string;\n  message: string;\n}\n\nexport const CSS = {\n  validationContainer: \"validation-container\",\n};\n\nexport const Validation: FunctionalComponent<ValidationProps> = ({\n  scale,\n  status,\n  id,\n  icon,\n  message,\n}): VNode => (\n  <div class={CSS.validationContainer}>\n    <calcite-input-message aria-live=\"polite\" icon={icon} id={id} scale={scale} status={status}>\n      {message}\n    </calcite-input-message>\n  </div>\n);\n","export const CSS = {\n  icon: \"icon\",\n  iconContainer: \"icon-container\",\n  select: \"select\",\n  wrapper: \"wrapper\",\n};\n\nexport const IDS = {\n  validationMessage: \"selectValidationMessage\",\n};\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-select-font-size: The font size of `calcite-option`s in the component.\n * @prop --calcite-select-spacing: The padding around the selected option text.\n */\n\n:host {\n  @extend %component-spacing;\n  @apply flex flex-col;\n}\n\n.wrapper {\n  @apply relative flex items-stretch;\n  inline-size: var(--select-width);\n\n  &:focus-within,\n  &:active,\n  &:hover {\n    .icon {\n      color: var(--calcite-color-text-1);\n    }\n  }\n}\n\n@include disabled();\n\n:host([scale=\"s\"]) {\n  --calcite-select-font-size: theme(\"fontSize.n2h\");\n  --calcite-select-spacing-inline: theme(\"spacing.2\") theme(\"spacing.8\");\n\n  .wrapper {\n    @apply h-6;\n  }\n\n  .icon-container {\n    @apply px-2;\n  }\n}\n\n:host([scale=\"m\"]) {\n  --calcite-select-font-size: theme(\"fontSize.n1h\");\n  --calcite-select-spacing-inline: theme(\"spacing.3\") theme(\"spacing.10\");\n\n  .wrapper {\n    @apply h-8;\n  }\n\n  .icon-container {\n    @apply px-3;\n  }\n}\n\n:host([scale=\"l\"]) {\n  --calcite-select-font-size: theme(\"fontSize.0h\");\n  --calcite-select-spacing-inline: theme(\"spacing.4\") theme(\"spacing.12\");\n\n  .wrapper {\n    block-size: 44px;\n  }\n\n  .icon-container {\n    @apply px-4;\n  }\n}\n\n:host([width=\"auto\"]) {\n  @apply w-auto;\n}\n\n:host([width=\"half\"]) {\n  @apply w-1/2;\n}\n\n:host([width=\"full\"]) {\n  @apply w-full;\n}\n\n.select {\n  @apply bg-foreground-1 border-color-input text-color-2 font-inherit focus-base m-0 box-border w-full cursor-pointer appearance-none truncate rounded-none border border-solid;\n  font-size: var(--calcite-select-font-size);\n  padding-inline: var(--calcite-select-spacing-inline);\n  border-inline-end-width: theme(\"borderWidth.0\");\n\n  &:focus {\n    @apply focus-inset;\n  }\n}\n\n// override user agent stylesheet disabled styling\nselect:disabled {\n  @apply border-color-input bg-opacity-100;\n}\n\n.icon-container {\n  @apply border-color-input text-color-2 pointer-events-none absolute inset-y-0 flex items-center border-0 border-solid bg-transparent;\n  inset-inline-end: theme(\"inset.0\");\n  border-inline-width: theme(\"borderWidth.0\") theme(\"borderWidth.DEFAULT\");\n\n  .icon {\n    color: var(--calcite-color-text-3);\n  }\n}\n\n:host([status=\"invalid\"]) {\n  select,\n  .icon-container {\n    @apply border-color-danger;\n  }\n\n  select:focus,\n  .icon-container:focus {\n    @apply focus-inset-danger;\n  }\n}\n\n.select:focus ~ .icon-container {\n  @apply border-color-transparent;\n}\n\n@include form-validation-message();\n@include hidden-form-input();\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { focusElement, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  afterConnectDefaultValueSet,\n  connectForm,\n  disconnectForm,\n  FormComponent,\n  HiddenFormInputSlot,\n  MutableValidityState,\n} from \"../../utils/form\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { connectLabel, disconnectLabel, getLabelText, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale, Status, Width } from \"../interfaces\";\nimport { getIconScale } from \"../../utils/component\";\nimport { Validation } from \"../functional/Validation\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { CSS, IDS } from \"./resources\";\n\ntype OptionOrGroup = HTMLCalciteOptionElement | HTMLCalciteOptionGroupElement;\ntype NativeOptionOrGroup = HTMLOptionElement | HTMLOptGroupElement;\n\nfunction isOption(optionOrGroup: OptionOrGroup): optionOrGroup is HTMLCalciteOptionElement {\n  return optionOrGroup.tagName === \"CALCITE-OPTION\";\n}\n\nfunction isOptionGroup(\n  optionOrGroup: OptionOrGroup,\n): optionOrGroup is HTMLCalciteOptionGroupElement {\n  return optionOrGroup.tagName === \"CALCITE-OPTION-GROUP\";\n}\n\n/**\n * @slot - A slot for adding `calcite-option`s.\n */\n@Component({\n  tag: \"calcite-select\",\n  styleUrl: \"select.scss\",\n  shadow: true,\n})\nexport class Select\n  implements LabelableComponent, FormComponent, InteractiveComponent, LoadableComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true }) form: string;\n\n  /**\n   * Accessible name for the component.\n   *\n   */\n  @Prop() label!: string;\n\n  /** Specifies the validation message to display under the component. */\n  @Prop() validationMessage: string;\n\n  /** Specifies the validation icon to display under the component. */\n  @Prop({ reflect: true }) validationIcon: IconNameOrString | boolean;\n\n  /**\n   * The current validation state of the component.\n   *\n   * @readonly\n   * @mdn [ValidityState](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState)\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated in form util when syncing hidden input\n  @Prop({ mutable: true }) validity: MutableValidityState = {\n    valid: false,\n    badInput: false,\n    customError: false,\n    patternMismatch: false,\n    rangeOverflow: false,\n    rangeUnderflow: false,\n    stepMismatch: false,\n    tooLong: false,\n    tooShort: false,\n    typeMismatch: false,\n    valueMissing: false,\n  };\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /** When `true`, the component must have a value in order for the form to submit. */\n  @Prop({ reflect: true }) required = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  /** The component's `selectedOption` value. */\n  @Prop({ mutable: true }) value: string = null;\n\n  @Watch(\"value\")\n  valueHandler(value: string): void {\n    this.updateItemsFromValue(value);\n  }\n\n  /**\n   * The component's selected option `HTMLElement`.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) selectedOption: HTMLCalciteOptionElement;\n\n  @Watch(\"selectedOption\")\n  selectedOptionHandler(selectedOption: HTMLCalciteOptionElement): void {\n    this.value = selectedOption?.value;\n  }\n\n  /**\n   * Specifies the width of the component.\n   */\n  @Prop({ reflect: true }) width: Width = \"auto\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteSelectElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: Select[\"value\"];\n\n  private componentToNativeEl = new Map<OptionOrGroup, NativeOptionOrGroup>();\n\n  private mutationObserver = createObserver(\"mutation\", () => this.populateInternalSelect());\n\n  private selectEl: HTMLSelectElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    const { el } = this;\n\n    this.mutationObserver?.observe(el, {\n      subtree: true,\n      childList: true,\n    });\n\n    connectInteractive(this);\n    connectLabel(this);\n    connectForm(this);\n  }\n\n  disconnectedCallback(): void {\n    this.mutationObserver?.disconnect();\n    disconnectInteractive(this);\n    disconnectLabel(this);\n    disconnectForm(this);\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n\n    if (typeof this.value === \"string\") {\n      this.updateItemsFromValue(this.value);\n    }\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n    afterConnectDefaultValueSet(this, this.selectedOption?.value ?? \"\");\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    focusElement(this.selectEl);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the `selectedOption` changes.\n   */\n  @Event({ cancelable: false }) calciteSelectChange: EventEmitter<void>;\n\n  private handleInternalSelectChange = (): void => {\n    const selected = this.selectEl.selectedOptions[0];\n    this.selectFromNativeOption(selected);\n    requestAnimationFrame(() => this.emitChangeEvent());\n  };\n\n  @Listen(\"calciteInternalOptionChange\")\n  @Listen(\"calciteInternalOptionGroupChange\")\n  protected handleOptionOrGroupChange(event: CustomEvent): void {\n    event.stopPropagation();\n\n    const optionOrGroup = event.target as OptionOrGroup;\n    const nativeEl = this.componentToNativeEl.get(optionOrGroup);\n\n    if (!nativeEl) {\n      return;\n    }\n\n    this.updateNativeElement(optionOrGroup, nativeEl);\n\n    if (isOption(optionOrGroup) && optionOrGroup.selected) {\n      this.deselectAllExcept(optionOrGroup);\n      this.selectedOption = optionOrGroup;\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  private updateItemsFromValue(value: string): void {\n    this.el\n      .querySelectorAll(\"calcite-option\")\n      .forEach((item) => (item.selected = item.value === value));\n  }\n\n  private updateNativeElement(\n    optionOrGroup: OptionOrGroup,\n    nativeOptionOrGroup: NativeOptionOrGroup,\n  ): void {\n    nativeOptionOrGroup.disabled = optionOrGroup.disabled;\n    nativeOptionOrGroup.label = optionOrGroup.label;\n\n    if (isOption(optionOrGroup)) {\n      const option = nativeOptionOrGroup as HTMLOptionElement;\n      option.selected = optionOrGroup.selected;\n      option.value = optionOrGroup.value;\n\n      // need to set innerText for mobile\n      // see https://stackoverflow.com/questions/35021620/ios-safari-not-showing-all-options-for-select-menu/41749701\n      option.innerText = optionOrGroup.label;\n    }\n  }\n\n  private populateInternalSelect = (): void => {\n    const optionsAndGroups = Array.from(\n      this.el.children as HTMLCollectionOf<OptionOrGroup | HTMLSlotElement>,\n    ).filter(\n      (child) => child.tagName === \"CALCITE-OPTION\" || child.tagName === \"CALCITE-OPTION-GROUP\",\n    ) as OptionOrGroup[];\n\n    this.clearInternalSelect();\n\n    optionsAndGroups.forEach((optionOrGroup) =>\n      this.selectEl?.append(this.toNativeElement(optionOrGroup)),\n    );\n  };\n\n  private clearInternalSelect(): void {\n    this.componentToNativeEl.forEach((value) => value.remove());\n    this.componentToNativeEl.clear();\n  }\n\n  private storeSelectRef = (node: HTMLSelectElement): void => {\n    this.selectEl = node;\n    this.populateInternalSelect();\n\n    const selected = this.selectEl.selectedOptions[0];\n    this.selectFromNativeOption(selected);\n  };\n\n  private selectFromNativeOption(nativeOption: HTMLOptionElement): void {\n    if (!nativeOption) {\n      return;\n    }\n\n    let futureSelected: HTMLCalciteOptionElement;\n\n    this.componentToNativeEl.forEach((nativeOptionOrGroup, optionOrGroup) => {\n      if (isOption(optionOrGroup) && nativeOptionOrGroup === nativeOption) {\n        optionOrGroup.selected = true;\n        futureSelected = optionOrGroup;\n        this.deselectAllExcept(optionOrGroup as HTMLCalciteOptionElement);\n      }\n    });\n\n    if (futureSelected) {\n      this.selectedOption = futureSelected;\n    }\n  }\n\n  private toNativeElement(\n    optionOrGroup: HTMLCalciteOptionElement | HTMLCalciteOptionGroupElement,\n  ): NativeOptionOrGroup {\n    if (isOption(optionOrGroup)) {\n      const option = document.createElement(\"option\");\n      this.updateNativeElement(optionOrGroup, option);\n      this.componentToNativeEl.set(optionOrGroup, option);\n\n      return option;\n    }\n\n    if (isOptionGroup(optionOrGroup)) {\n      const group = document.createElement(\"optgroup\");\n      this.updateNativeElement(optionOrGroup, group);\n\n      Array.from(optionOrGroup.children as HTMLCollectionOf<HTMLCalciteOptionElement>).forEach(\n        (option) => {\n          const nativeOption = this.toNativeElement(option);\n          group.append(nativeOption);\n          this.componentToNativeEl.set(optionOrGroup, nativeOption);\n        },\n      );\n\n      this.componentToNativeEl.set(optionOrGroup, group);\n\n      return group;\n    }\n\n    throw new Error(\"unsupported element child provided\");\n  }\n\n  private deselectAllExcept(except: HTMLCalciteOptionElement): void {\n    this.el.querySelectorAll<HTMLCalciteOptionElement>(\"calcite-option\").forEach((option) => {\n      if (option === except) {\n        return;\n      }\n\n      option.selected = false;\n    });\n  }\n\n  private emitChangeEvent = (): void => {\n    this.calciteSelectChange.emit();\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  renderChevron(): VNode {\n    return (\n      <div class={CSS.iconContainer}>\n        <calcite-icon class={CSS.icon} icon=\"chevron-down\" scale={getIconScale(this.scale)} />\n      </div>\n    );\n  }\n\n  render(): VNode {\n    const { disabled } = this;\n\n    return (\n      <Host>\n        <InteractiveContainer disabled={disabled}>\n          <div class={CSS.wrapper}>\n            <select\n              aria-errormessage={IDS.validationMessage}\n              aria-invalid={toAriaBoolean(this.status === \"invalid\")}\n              aria-label={getLabelText(this)}\n              class={CSS.select}\n              disabled={disabled}\n              onChange={this.handleInternalSelectChange}\n              ref={this.storeSelectRef}\n            >\n              <slot />\n            </select>\n            {this.renderChevron()}\n            <HiddenFormInputSlot component={this} />\n          </div>\n          {this.validationMessage && this.status === \"invalid\" ? (\n            <Validation\n              icon={this.validationIcon}\n              id={IDS.validationMessage}\n              message={this.validationMessage}\n              scale={this.scale}\n              status={this.status}\n            />\n          ) : null}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","export const CSS = {\n  icon: \"icon\",\n  flipRtl: \"flip-rtl\",\n};\n","import { CalciteIconPath } from \"@esri/calcite-ui-icons\";\nimport { getAssetPath } from \"@stencil/core\";\nimport { Scale } from \"../interfaces\";\nimport { IconNameOrString } from \"./interfaces\";\n\nexport interface FetchIconProps {\n  icon: IconNameOrString;\n  scale: Scale;\n}\n\n/**\n * Icon data cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const iconCache: Record<string, CalciteIconPath> = {};\n\n/**\n * Icon request cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const requestCache: Record<string, Promise<CalciteIconPath>> = {};\n\nexport const scaleToPx: Record<Scale, number> = {\n  s: 16,\n  m: 24,\n  l: 32,\n};\n\nfunction generateIconId({ icon, scale }: FetchIconProps): string {\n  const size = scaleToPx[scale];\n  const name = normalizeIconName(icon);\n  const filled = name.charAt(name.length - 1) === \"F\";\n  const iconName = filled ? name.substring(0, name.length - 1) : name;\n\n  return `${iconName}${size}${filled ? \"F\" : \"\"}`;\n}\n\nexport async function fetchIcon(props: FetchIconProps): Promise<CalciteIconPath> {\n  const cachedIconKey = generateIconId(props);\n  const cachedIconData = getCachedIconDataByKey(cachedIconKey);\n\n  if (cachedIconData) {\n    return cachedIconData;\n  }\n\n  if (!requestCache[cachedIconKey]) {\n    requestCache[cachedIconKey] = fetch(getAssetPath(`./assets/icon/${cachedIconKey}.json`))\n      .then((resp) => resp.json())\n      .catch(() => {\n        console.error(`\"${cachedIconKey}\" is not a valid calcite-ui-icon name`);\n        return \"\";\n      });\n  }\n\n  const path = await requestCache[cachedIconKey];\n  iconCache[cachedIconKey] = path;\n\n  return path;\n}\n\n/**\n * Util to retrieve cached icon data based on icon name and scale.\n *\n * @param props – icon properties\n */\nexport function getCachedIconData(props: FetchIconProps): CalciteIconPath {\n  return getCachedIconDataByKey(generateIconId(props));\n}\n\nfunction getCachedIconDataByKey(id: string): CalciteIconPath {\n  return iconCache[id];\n}\n\n/**\n * Normalize the icon name to match the path data module exports.\n * Exported for testing purposes.\n *\n * @param name – an icon name that can be either kebab or camel-cased\n * @private\n */\nexport function normalizeIconName(name: string): string {\n  const numberLeadingName = !isNaN(Number(name.charAt(0)));\n  const parts = name.split(\"-\");\n  const kebabCased = parts.length > 0;\n\n  if (kebabCased) {\n    const firstNonDigitInPartPattern = /[a-z]/i;\n\n    name = parts\n      .map((part, partIndex) => {\n        return part.replace(firstNonDigitInPartPattern, function replacer(match, offset) {\n          const isFirstCharInName = partIndex === 0 && offset === 0;\n\n          if (isFirstCharInName) {\n            return match;\n          }\n\n          return match.toUpperCase();\n        });\n      })\n      .join(\"\");\n  }\n\n  return numberLeadingName ? `i${name}` : name;\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-ui-icon-color: [Deprecated] Use --calcite-icon-color. Specifies the component's color. Defaults to `currentColor`.\n * @prop --calcite-icon-color: Specifies the component's color. Defaults to `currentColor`.\n */\n\n:host {\n  @apply text-color-icon inline-flex;\n}\n\n$icon-size-s: 16px;\n$icon-size-m: 24px;\n$icon-size-l: 32px;\n\n:host([scale=\"s\"]) {\n  inline-size: $icon-size-s;\n  block-size: $icon-size-s;\n  min-inline-size: $icon-size-s;\n  min-block-size: $icon-size-s;\n}\n\n:host([scale=\"m\"]) {\n  inline-size: $icon-size-m;\n  block-size: $icon-size-m;\n  min-inline-size: $icon-size-m;\n  min-block-size: $icon-size-m;\n}\n\n:host([scale=\"l\"]) {\n  inline-size: $icon-size-l;\n  block-size: $icon-size-l;\n  min-inline-size: $icon-size-l;\n  min-block-size: $icon-size-l;\n}\n\n.flip-rtl {\n  transform: scaleX(-1);\n}\n\n.svg {\n  @apply block;\n}\n\n@include base-component();\n","import { CalciteIconPath, CalciteMultiPathEntry } from \"@esri/calcite-ui-icons\";\nimport { Component, Element, h, Host, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { getElementDir, toAriaBoolean } from \"../../utils/dom\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale } from \"../interfaces\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { CSS } from \"./resources\";\nimport { fetchIcon, getCachedIconData, scaleToPx } from \"./utils\";\nimport { IconNameOrString } from \"./interfaces\";\n\n@Component({\n  tag: \"calcite-icon\",\n  styleUrl: \"icon.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Icon {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Displays a specific icon.\n   *\n   * @see [Icons](https://esri.github.io/calcite-ui-icons)\n   */\n  @Prop({\n    reflect: true,\n  })\n  icon: IconNameOrString = null;\n\n  /**\n   * When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`).\n   */\n  @Prop({\n    reflect: true,\n  })\n  flipRtl = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({\n    reflect: true,\n  })\n  scale: Scale = \"m\";\n\n  /**\n   * Accessible name for the component.\n   *\n   * It is recommended to set this value if your icon is semantic.\n   */\n  @Prop()\n  textLabel: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    if (!this.visible) {\n      this.waitUntilVisible(() => {\n        this.visible = true;\n        this.loadIconPathData();\n      });\n    }\n  }\n\n  disconnectedCallback(): void {\n    this.intersectionObserver?.disconnect();\n    this.intersectionObserver = null;\n  }\n\n  render(): VNode {\n    const { el, flipRtl, pathData, scale, textLabel } = this;\n    const dir = getElementDir(el);\n    const size = scaleToPx[scale];\n    const semantic = !!textLabel;\n    const paths = [].concat(pathData || \"\");\n    return (\n      <Host\n        aria-hidden={toAriaBoolean(!semantic)}\n        aria-label={semantic ? textLabel : null}\n        role={semantic ? \"img\" : null}\n      >\n        <svg\n          aria-hidden=\"true\"\n          class={{\n            [CSS.flipRtl]: dir === \"rtl\" && flipRtl,\n            svg: true,\n          }}\n          fill=\"currentColor\"\n          height=\"100%\"\n          viewBox={`0 0 ${size} ${size}`}\n          width=\"100%\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          {paths.map((path: string | CalciteMultiPathEntry) =>\n            typeof path === \"string\" ? (\n              <path d={path} />\n            ) : (\n              <path d={path.d} opacity={\"opacity\" in path ? path.opacity : 1} />\n            ),\n          )}\n        </svg>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteIconElement;\n\n  private intersectionObserver: IntersectionObserver;\n\n  @State()\n  private pathData: CalciteIconPath;\n\n  @State()\n  private visible = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"icon\")\n  @Watch(\"scale\")\n  private async loadIconPathData(): Promise<void> {\n    const { icon, scale, visible } = this;\n\n    if (!isBrowser() || !icon || !visible) {\n      return;\n    }\n\n    const fetchIconProps = { icon, scale };\n    const pathData = getCachedIconData(fetchIconProps) || (await fetchIcon(fetchIconProps));\n\n    // While the fetchIcon method is awaiting response, the icon requested can change. This check is to verify the response received belongs to the current icon.\n    if (icon !== this.icon) {\n      return;\n    }\n\n    this.pathData = pathData;\n  }\n\n  private waitUntilVisible(callback: () => void): void {\n    this.intersectionObserver = createObserver(\n      \"intersection\",\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            this.intersectionObserver.disconnect();\n            this.intersectionObserver = null;\n            callback();\n          }\n        });\n      },\n      { rootMargin: \"50px\" },\n    );\n\n    if (!this.intersectionObserver) {\n      callback();\n      return;\n    }\n\n    this.intersectionObserver.observe(this.el);\n  }\n}\n","export const StatusIconDefaults = {\n  valid: \"check-circle\",\n  invalid: \"exclamation-mark-triangle\",\n  idle: \"information\",\n} as const;\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-input-message-spacing-value: The top margin spacing above the component.\n */\n\n:host {\n  @apply text-color-1 transition-default box-border flex h-auto w-full items-center font-medium opacity-100;\n  --calcite-input-message-spacing-value: theme(\"spacing.1\");\n  margin-block-start: var(--calcite-input-message-spacing-value);\n}\n\n.calcite-input-message-icon {\n  @apply transition-default pointer-events-none inline-flex flex-shrink-0;\n  margin-inline-end: theme(\"margin.2\");\n}\n\n:host([status=\"invalid\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-status-danger);\n}\n\n:host([status=\"warning\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-status-warning);\n}\n\n:host([status=\"valid\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-status-success);\n}\n\n:host([status=\"idle\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-brand);\n}\n\n:host([scale=\"s\"]) {\n  @apply text-n3h;\n}\n\n:host([scale=\"m\"]) {\n  @apply text-n2h;\n}\n\n:host([scale=\"l\"]) {\n  @apply text-n1h;\n}\n\n@include base-component();\n","import { Component, Element, h, Host, Prop, VNode, Watch } from \"@stencil/core\";\nimport { setRequestedIcon } from \"../../utils/dom\";\nimport { Scale, Status } from \"../interfaces\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { StatusIconDefaults } from \"./interfaces\";\n\n/**\n * @slot - A slot for adding text.\n */\n@Component({\n  tag: \"calcite-input-message\",\n  styleUrl: \"input-message.scss\",\n  shadow: true,\n})\nexport class InputMessage {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies an icon to display. */\n  @Prop({ reflect: true }) icon: IconNameOrString | boolean;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  @Watch(\"status\")\n  @Watch(\"icon\")\n  handleIconEl(): void {\n    this.requestedIcon = setRequestedIcon(StatusIconDefaults, this.icon, this.status);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.requestedIcon = setRequestedIcon(StatusIconDefaults, this.icon, this.status);\n  }\n\n  render(): VNode {\n    const hidden = this.el.hidden;\n    return (\n      <Host calcite-hydrated-hidden={hidden}>\n        {this.renderIcon(this.requestedIcon)}\n        <slot />\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteInputMessageElement;\n\n  /** the computed icon to render */\n  private requestedIcon?: IconNameOrString;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private renderIcon(iconName: IconNameOrString): VNode {\n    if (iconName) {\n      return (\n        <calcite-icon\n          class=\"calcite-input-message-icon\"\n          flipRtl={this.iconFlipRtl}\n          icon={iconName}\n          scale=\"s\"\n        />\n      );\n    }\n  }\n}\n","import { isBrowser } from \"./browser\";\n\nexport interface ExtendedMutationObserver extends MutationObserver {\n  new: () => ExtendedMutationObserver;\n  unobserve: (target: Node) => void;\n}\n\ndeclare const ExtendedMutationObserver: {\n  prototype: ExtendedMutationObserver;\n  new (callback: MutationCallback): ExtendedMutationObserver;\n};\n\ntype ObserverType = \"mutation\" | \"intersection\" | \"resize\";\n\ntype ObserverCallbackType<T extends ObserverType> = T extends \"mutation\"\n  ? MutationCallback\n  : T extends \"intersection\"\n    ? IntersectionObserverCallback\n    : T extends \"resize\"\n      ? ResizeObserverCallback\n      : never;\n\ntype ObserverOptions<T extends ObserverType> = T extends \"intersection\" ? IntersectionObserverInit : never;\n\ntype ObserverClassType<T extends ObserverType> = T extends \"mutation\"\n  ? typeof ExtendedMutationObserver\n  : T extends \"intersection\"\n    ? typeof IntersectionObserver\n    : T extends \"resize\"\n      ? typeof ResizeObserver\n      : never;\n\ntype ObserverInstanceType<T extends ObserverType> = T extends \"mutation\"\n  ? ExtendedMutationObserver\n  : T extends \"intersection\"\n    ? IntersectionObserver\n    : T extends \"resize\"\n      ? ResizeObserver\n      : never;\n\n/**\n * This utility ensures observers are created only for browser contexts.\n *\n * @param type - the type of observer to create\n * @param callback - the observer callback\n * @param options - the observer options\n */\nexport function createObserver<T extends ObserverType>(\n  type: T,\n  callback: ObserverCallbackType<T>,\n  options?: ObserverOptions<T>,\n): ObserverInstanceType<T> | undefined {\n  if (!isBrowser()) {\n    return undefined;\n  }\n\n  const Observer = getObserver<T>(type);\n  return new Observer(callback as any, options) as any;\n}\n\nfunction getObserver<T extends ObserverType>(type: T): ObserverClassType<T> {\n  // based on https://github.com/whatwg/dom/issues/126#issuecomment-1049814948\n  class ExtendedMutationObserver extends window.MutationObserver implements ExtendedMutationObserver {\n    private observedEntry: Array<{\n      target: Node;\n      options?: MutationObserverInit;\n    }> = [];\n\n    private readonly callback: MutationCallback;\n\n    constructor(callback: MutationCallback) {\n      super(callback);\n      this.callback = callback;\n    }\n\n    observe(target: Node, options?: MutationObserverInit): void {\n      this.observedEntry.push({ target, options });\n\n      return super.observe(target, options);\n    }\n\n    unobserve(target: Node): void {\n      const newObservedEntries = this.observedEntry.filter((observed) => observed.target !== target);\n      this.observedEntry = [];\n      this.callback(super.takeRecords(), this);\n      this.disconnect();\n      newObservedEntries.forEach((observed) => this.observe(observed.target, observed.options));\n    }\n  }\n\n  return (function () {\n    return (\n      type === \"intersection\"\n        ? window.IntersectionObserver\n        : type === \"mutation\"\n          ? ExtendedMutationObserver\n          : window.ResizeObserver\n    ) as any;\n  })();\n}\n"],"names":["CSS","validationContainer","Validation","scale","status","id","icon","message","h","class","iconContainer","select","wrapper","IDS","validationMessage","selectCss","CalciteSelectStyle0","isOption","optionOrGroup","tagName","isOptionGroup","Select","proxyCustomElement","HTMLElement","componentToNativeEl","Map","mutationObserver","createObserver","this","populateInternalSelect","handleInternalSelectChange","selected","selectEl","selectedOptions","selectFromNativeOption","requestAnimationFrame","emitChangeEvent","optionsAndGroups","Array","from","el","children","filter","child","clearInternalSelect","forEach","append","toNativeElement","storeSelectRef","node","calciteSelectChange","emit","valid","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","valueHandler","value","updateItemsFromValue","selectedOptionHandler","selectedOption","connectedCallback","observe","subtree","childList","connectInteractive","connectLabel","connectForm","disconnectedCallback","disconnect","disconnectInteractive","disconnectLabel","disconnectForm","componentWillLoad","setUpLoadableComponent","componentDidLoad","setComponentLoaded","afterConnectDefaultValueSet","componentDidRender","updateHostInteraction","setFocus","componentFocusable","focusElement","handleOptionOrGroupChange","event","stopPropagation","target","nativeEl","get","updateNativeElement","deselectAllExcept","onLabelClick","querySelectorAll","item","nativeOptionOrGroup","disabled","label","option","innerText","remove","clear","nativeOption","futureSelected","document","createElement","set","group","Error","except","renderChevron","getIconScale","render","Host","key","InteractiveContainer","toAriaBoolean","getLabelText","onChange","ref","HiddenFormInputSlot","component","validationIcon","flipRtl","iconCache","requestCache","scaleToPx","s","m","l","generateIconId","size","name","normalizeIconName","filled","charAt","length","iconName","substring","async","fetchIcon","props","cachedIconKey","cachedIconData","getCachedIconDataByKey","fetch","getAssetPath","then","resp","json","catch","console","error","path","getCachedIconData","numberLeadingName","isNaN","Number","parts","split","kebabCased","firstNonDigitInPartPattern","map","part","partIndex","replace","match","offset","isFirstCharInName","toUpperCase","join","iconCss","CalciteIconStyle0","Icon","visible","waitUntilVisible","loadIconPathData","intersectionObserver","pathData","textLabel","dir","getElementDir","semantic","paths","concat","role","svg","fill","height","viewBox","width","xmlns","d","opacity","isBrowser","fetchIconProps","callback","entries","entry","isIntersecting","rootMargin","StatusIconDefaults","invalid","idle","inputMessageCss","CalciteInputMessageStyle0","InputMessage","handleIconEl","requestedIcon","setRequestedIcon","hidden","renderIcon","iconFlipRtl","type","options","Observer","getObserver","ExtendedMutationObserver","window","MutationObserver","constructor","super","observedEntry","push","unobserve","newObservedEntries","observed","takeRecords","IntersectionObserver","ResizeObserver"],"sourceRoot":""}