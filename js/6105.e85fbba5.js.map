{"version":3,"file":"js/6105.e85fbba5.js","mappings":"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","sources":["webpack://vue-arcgis-0905/src/components/chip/resources.ts","webpack://vue-arcgis-0905/src/components/chip/chip.scss","webpack://vue-arcgis-0905/src/components/chip/chip.tsx","webpack://vue-arcgis-0905/src/components/icon/resources.ts","webpack://vue-arcgis-0905/src/components/icon/utils.ts","webpack://vue-arcgis-0905/src/components/icon/icon.scss","webpack://vue-arcgis-0905/src/components/icon/icon.tsx","webpack://vue-arcgis-0905/src/utils/t9n.ts"],"sourcesContent":["export const CSS = {\n  title: \"title\",\n  close: \"close\",\n  imageContainer: \"image-container\",\n  chipIcon: \"chip-icon\",\n  textSlotted: \"text--slotted\",\n  container: \"container\",\n  imageSlotted: \"image--slotted\",\n  closable: \"closable\",\n  multiple: \"multiple\",\n  single: \"single\",\n  selectable: \"selectable\",\n  selectIcon: \"select-icon\",\n  selectIconActive: \"select-icon--active\",\n  nonInteractive: \"non-interactive\",\n  isCircle: \"is-circle\",\n  selected: \"selected\",\n};\n\nexport const SLOTS = {\n  image: \"image\",\n};\n\nexport const ICONS = {\n  close: \"x\",\n  checkedSingle: \"circle-f\",\n  uncheckedMultiple: \"square\",\n  checkedMultiple: \"check-square-f\",\n} as const;\n",".container,\n.select-icon,\n.title {\n  padding-inline-start: var(--calcite-internal-chip-padding-start);\n  padding-inline-end: var(--calcite-internal-chip-padding-end);\n}\n\n.select-icon:not(.select-icon--active) {\n  padding-inline: 0;\n}\n\n:host([scale=\"s\"]) {\n  @apply text-n2 h-6;\n\n  --calcite-chip-spacing-s-internal: theme(\"spacing[1]\");\n  --calcite-chip-spacing-l-internal: theme(\"spacing[2]\");\n\n  .close,\n  .select-icon--active {\n    @apply h-4 w-4;\n  }\n\n  .image-container {\n    @apply h-5 w-5;\n  }\n\n  .container.is-circle,\n  .container.is-circle.image--slotted {\n    @apply w-6 h-6;\n\n    --calcite-internal-chip-padding-start: var(--calcite-spacing-px);\n    --calcite-internal-chip-padding-end: var(--calcite-spacing-px);\n  }\n\n  .multiple {\n    .select-icon {\n      --calcite-internal-chip-padding-start: var(--calcite-spacing-xxs);\n      --calcite-internal-chip-padding-end: var(--calcite-spacing-xxs);\n    }\n\n    &.image--slotted {\n      .select-icon {\n        --calcite-internal-chip-padding-start: var(--calcite-spacing-xs);\n        --calcite-internal-chip-padding-end: var(--calcite-spacing-sm);\n      }\n\n      &.text--slotted {\n        --calcite-internal-chip-padding-start: var(--calcite-spacing-px);\n        --calcite-internal-chip-padding-end: var(--calcite-spacing-xxs);\n      }\n    }\n  }\n\n  .container {\n    --calcite-internal-chip-padding-start: var(--calcite-spacing-xxs);\n    --calcite-internal-chip-padding-end: var(--calcite-spacing-xxs);\n\n    &.image--slotted {\n      --calcite-internal-chip-padding-start: var(--calcite-spacing-px);\n      --calcite-internal-chip-padding-end: var(--calcite-spacing-xxs);\n\n      &.closable {\n        --calcite-internal-chip-padding-end: var(--calcite-spacing-xxs);\n      }\n    }\n  }\n\n  .container:not(.is-circle):not(.multiple) {\n    &:not(.image-slotted) .select-icon.select-icon--active {\n      padding-inline-start: 0;\n      padding-inline-end: var(--calcite-spacing-xs);\n    }\n\n    &.image--slotted .select-icon.select-icon--active {\n      padding-inline-start: var(--calcite-spacing-base);\n      padding-inline-end: var(--calcite-spacing-sm);\n    }\n  }\n}\n\n:host([scale=\"s\"][closable]) .container {\n  --calcite-internal-chip-padding-start: var(--calcite-spacing-xxs);\n  --calcite-internal-chip-padding-end: var(--calcite-spacing-xxs);\n}\n\n:host([scale=\"m\"]) {\n  @apply text-n1 h-8;\n  --calcite-chip-spacing-s-internal: theme(\"spacing[1.5]\");\n  --calcite-chip-spacing-l-internal: theme(\"spacing[2]\");\n\n  .close,\n  .image-container,\n  .select-icon--active {\n    @apply h-6 w-6;\n\n    --calcite-internal-chip-padding-start: var(--calcite-spacing-xxs);\n    --calcite-internal-chip-padding-end: var(--calcite-spacing-xxs);\n  }\n\n  .container.is-circle,\n  .container.is-circle.image--slotted {\n    @apply w-8 h-8;\n\n    --calcite-internal-chip-padding-start: var(--calcite-spacing-px);\n    --calcite-internal-chip-padding-end: var(--calcite-spacing-px);\n  }\n\n  .multiple {\n    .select-icon {\n      --calcite-internal-chip-padding-start: var(--calcite-spacing-base);\n      --calcite-internal-chip-padding-end: var(--calcite-spacing-base);\n    }\n\n    &.image--slotted {\n      .select-icon {\n        --calcite-internal-chip-padding-start: var(--calcite-spacing-xxs);\n        --calcite-internal-chip-padding-end: var(--calcite-spacing-sm);\n      }\n\n      &.text--slotted {\n        --calcite-internal-chip-padding-start: var(--calcite-spacing-xxs);\n        --calcite-internal-chip-padding-end: var(--calcite-spacing-xs);\n      }\n    }\n  }\n\n  .container {\n    --calcite-internal-chip-padding-start: var(--calcite-spacing-xs);\n    --calcite-internal-chip-padding-end: var(--calcite-spacing-xs);\n\n    &.image--slotted {\n      --calcite-internal-chip-padding-start: var(--calcite-spacing-xxs);\n      --calcite-internal-chip-padding-end: var(--calcite-spacing-xs);\n\n      &.closable {\n        --calcite-internal-chip-padding-start: var(--calcite-spacing-xxs);\n        --calcite-internal-chip-padding-end: var(--calcite-spacing-xxs);\n      }\n    }\n  }\n\n  .container:not(.is-circle):not(.multiple) {\n    &:not(.image-slotted) .select-icon.select-icon--active {\n      padding-inline-start: 0;\n      padding-inline-end: var(--calcite-spacing-px);\n    }\n\n    &.image--slotted .select-icon.select-icon--active {\n      padding-inline-start: 0;\n      padding-inline-end: var(--calcite-spacing-sm);\n    }\n  }\n}\n\n:host([scale=\"m\"][closable]) .container {\n  --calcite-internal-chip-padding-start: var(--calcite-spacing-xs);\n  --calcite-internal-chip-padding-end: var(--calcite-spacing-xxs);\n}\n\n:host([scale=\"l\"]) {\n  @apply text-0 h-11;\n\n  --calcite-chip-spacing-s-internal: theme(\"spacing[2]\");\n  --calcite-chip-spacing-l-internal: theme(\"spacing[3]\");\n\n  .image-container,\n  .close,\n  .select-icon--active {\n    @apply h-8 w-8;\n\n    --calcite-internal-chip-padding-start: var(--calcite-spacing-xxs);\n    --calcite-internal-chip-padding-end: var(--calcite-spacing-xxs);\n  }\n\n  .container.is-circle,\n  .container.is-circle.image--slotted {\n    @apply w-11 h-11;\n\n    --calcite-internal-chip-padding-start: var(--calcite-spacing-xxs);\n    --calcite-internal-chip-padding-end: var(--calcite-spacing-xxs);\n  }\n\n  .multiple {\n    .select-icon {\n      --calcite-internal-chip-padding-start: var(--calcite-spacing-xxs);\n      --calcite-internal-chip-padding-end: var(--calcite-spacing-xxs);\n    }\n\n    &.image--slotted {\n      .select-icon {\n        --calcite-internal-chip-padding-start: var(--calcite-spacing-xs);\n        --calcite-internal-chip-padding-end: var(--calcite-spacing-md);\n      }\n    }\n  }\n\n  .container {\n    --calcite-internal-chip-padding-start: var(--calcite-spacing-sm);\n    --calcite-internal-chip-padding-end: var(--calcite-spacing-sm);\n\n    &.image--slotted {\n      --calcite-internal-chip-padding-start: var(--calcite-spacing-xs);\n      --calcite-internal-chip-padding-end: var(--calcite-spacing-sm);\n\n      &.closable {\n        --calcite-internal-chip-padding-start: var(--calcite-spacing-xs);\n        --calcite-internal-chip-padding-end: var(--calcite-spacing-xs);\n      }\n    }\n  }\n\n  .container:not(.is-circle):not(.multiple) {\n    &:not(.image-slotted) .select-icon.select-icon--active {\n      padding-inline-start: 0;\n      padding-inline-end: var(--calcite-spacing-xxs);\n    }\n\n    &.image--slotted .select-icon.select-icon--active {\n      padding-inline-start: 0;\n      padding-inline-end: var(--calcite-spacing-md);\n    }\n  }\n}\n\n:host([scale=\"l\"][closable]) .container {\n  --calcite-internal-chip-padding-start: var(--calcite-spacing-sm);\n  --calcite-internal-chip-padding-end: var(--calcite-spacing-xs);\n}\n\n:host {\n  @apply inline-flex\n    cursor-default\n    rounded-full;\n}\n\n.container {\n  @apply inline-flex\n  h-full\n  max-w-full\n  items-center\n  rounded-full\n  focus-base\n  justify-center\n  border\n  border-solid\n  border-color-1\n  box-border\n  font-medium;\n\n  &.selectable {\n    @apply cursor-pointer;\n  }\n  &:not(.non-interactive):focus {\n    @apply focus-outset;\n  }\n}\n\n:host([scale=\"s\"]) .container.selectable.single.image--slotted {\n  --calcite-internal-chip-padding-end: calc(theme(\"spacing[0.5]\") / 2);\n}\n\n:host([scale=\"s\"]) .container:not(.selected):not(.multiple).image--slotted {\n  --calcite-internal-chip-padding-start: calc(theme(\"spacing[0.5]\") / 2);\n}\n\n.container.text--slotted .title {\n  @apply truncate;\n\n  --calcite-internal-chip-padding-start: var(--calcite-chip-spacing-s-internal);\n  --calcite-internal-chip-padding-end: var(--calcite-chip-spacing-s-internal);\n}\n\n.container:not(.text--slotted) .title {\n  display: none;\n}\n\n.container:not(.image--slotted) .image-container {\n  display: none;\n}\n\n.container:not(.is-circle) {\n  &.image--slotted .image-container {\n    margin-inline-end: var(--calcite-chip-spacing-s-internal);\n  }\n\n  &.image--slotted .image-container ~ .chip-icon {\n    margin-inline-start: var(--calcite-chip-spacing-s-internal);\n  }\n\n  &.selectable:not(.text--slotted) .chip-icon {\n    margin-inline-end: var(--calcite-chip-spacing-s-internal);\n  }\n\n  &:not(.selectable):not(.text--slotted) .chip-icon {\n    margin-inline-start: var(--calcite-chip-spacing-s-internal);\n  }\n\n  &:not(.text--slotted) .chip-icon {\n    margin-inline-end: var(--calcite-chip-spacing-s-internal);\n  }\n\n  &:not(.text-slotted).image--slotted .image-container {\n    margin-inline-end: var(--calcite-chip-spacing-s-internal);\n  }\n\n  &:not(.closable):not(.text--slotted).image--slotted.selectable .image-container {\n    margin-inline-end: 0;\n    ~ .chip-icon {\n      margin-inline-start: calc(var(--calcite-chip-spacing-s-internal) * 2);\n    }\n  }\n}\n\n.chip-icon {\n  @apply relative my-0 inline-flex duration-150 ease-in-out;\n  margin-inline: var(--calcite-chip-spacing-s-internal);\n}\n\n.image-container {\n  @apply inline-flex overflow-hidden;\n  align-items: center;\n  justify-content: center;\n  pointer-events: none;\n}\n\n.close {\n  @apply focus-base\n    transition-default\n    text-color-1\n    m-0\n    cursor-pointer\n    items-center\n    border-none\n    bg-transparent;\n  -webkit-appearance: none;\n  display: flex;\n  border-radius: 50%;\n  align-content: center;\n  justify-content: center;\n  --calcite-chip-transparent-hover: var(--calcite-color-transparent-hover);\n  --calcite-chip-transparent-press: var(--calcite-color-transparent-press);\n  --calcite-internal-chip-padding-start: var(--calcite-spacing-xxs);\n  --calcite-internal-chip-padding-end: var(--calcite-spacing-xxs);\n  &:hover {\n    background-color: var(--calcite-chip-transparent-hover);\n  }\n  &:focus {\n    background-color: var(--calcite-chip-transparent-hover);\n    @apply focus-inset;\n  }\n  &:active {\n    background-color: var(--calcite-chip-transparent-press);\n  }\n  & calcite-icon {\n    color: inherit;\n  }\n}\n\n.select-icon {\n  align-self: center;\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  inset-block-start: -1px;\n  position: relative;\n  visibility: hidden;\n  inline-size: 0;\n  opacity: 0;\n  transition:\n    opacity 0.15s ease-in-out,\n    inline-size 0.15s ease-in-out;\n  &.select-icon--active {\n    visibility: visible;\n    opacity: 0.5;\n  }\n}\n\n:host([selected]) .select-icon {\n  opacity: 1;\n}\n\n.container:hover .select-icon--active {\n  opacity: 1;\n}\n\n.multiple .select-icon {\n  @apply flex justify-center items-center;\n}\n\nslot[name=\"image\"]::slotted(*) {\n  @apply rounded-half flex h-full w-full overflow-hidden;\n}\n\n:host([kind=\"neutral\"]) {\n  background-color: var(--calcite-color-foreground-2);\n  color: var(--calcite-color-text-1);\n  .container {\n    border-color: transparent;\n  }\n  .close {\n    color: var(--calcite-color-text-3);\n  }\n}\n\n:host([kind=\"inverse\"]) {\n  background-color: var(--calcite-color-inverse);\n  @apply text-color-inverse;\n  .container {\n    border-color: transparent;\n  }\n  .close {\n    @apply text-color-inverse;\n  }\n}\n\n:host([kind=\"brand\"]) {\n  background-color: var(--calcite-color-brand);\n  color: var(--calcite-color-text-inverse);\n  .container {\n    border-color: transparent;\n  }\n  .close {\n    @apply text-color-inverse;\n  }\n}\n\n:host([appearance=\"outline-fill\"]),\n:host([appearance=\"outline\"]) {\n  @apply text-color-1 bg-foreground-1;\n  .close {\n    @apply text-color-3;\n  }\n}\n\n:host([appearance=\"outline-fill\"]) {\n  @apply bg-foreground-1;\n}\n\n:host([appearance=\"outline\"]) {\n  @apply bg-transparent;\n}\n\n:host([kind=\"neutral\"][appearance=\"outline-fill\"]) .container,\n:host([kind=\"neutral\"][appearance=\"outline\"]) .container {\n  border-color: var(--calcite-color-border-1);\n}\n\n:host([kind=\"inverse\"][appearance=\"outline-fill\"]) .container,\n:host([kind=\"inverse\"][appearance=\"outline\"]) .container {\n  border-color: var(--calcite-color-border-inverse);\n}\n\n:host([kind=\"brand\"][appearance=\"outline-fill\"]) .container,\n:host([kind=\"brand\"][appearance=\"outline\"]) .container {\n  border-color: var(--calcite-color-brand);\n}\n\n:host([kind=\"brand\"][appearance=\"solid\"]),\n:host([kind=\"inverse\"][appearance=\"solid\"]) {\n  button {\n    outline-color: var(--calcite-color-text-inverse);\n  }\n}\n\n:host([closed]) {\n  display: none;\n}\n\n@include disabled();\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { toAriaBoolean, slotChangeHasAssignedElement } from \"../../utils/dom\";\nimport { Appearance, Kind, Scale, SelectionMode } from \"../interfaces\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { getIconScale } from \"../../utils/component\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { ChipMessages } from \"./assets/chip/t9n\";\nimport { CSS, SLOTS, ICONS } from \"./resources\";\n\n/**\n * @slot - A slot for adding text.\n * @slot image - A slot for adding an image.\n */\n@Component({\n  tag: \"calcite-chip\",\n  styleUrl: \"chip.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Chip\n  implements InteractiveComponent, LoadableComponent, LocalizedComponent, T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** Specifies the appearance style of the component. */\n  @Prop({ reflect: true }) appearance: Extract<\"outline\" | \"outline-fill\" | \"solid\", Appearance> =\n    \"solid\";\n\n  /** Specifies the kind of the component, which will apply to border and background if applicable. */\n  @Prop({ reflect: true }) kind: Extract<\"brand\" | \"inverse\" | \"neutral\", Kind> = \"neutral\";\n\n  /** When `true`, a close button is added to the component. */\n  @Prop({ reflect: true }) closable = false;\n\n  /** Specifies an icon to display. */\n  @Prop({ reflect: true }) icon: IconNameOrString;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /** Specifies the size of the component. When contained in a parent `calcite-chip-group` inherits the parent's `scale` value. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Accessible name for the component. */\n  @Prop() label: string;\n\n  /** The component's value. */\n  @Prop() value!: any;\n\n  /** When `true`, hides the component. */\n  @Prop({ reflect: true, mutable: true }) closed = false;\n\n  /**\n   * This internal property, managed by a containing `calcite-chip-group`, is\n   * conditionally set based on the `selectionMode` of the parent\n   *\n   * @internal\n   */\n  @Prop() selectionMode: Extract<\"multiple\" | \"single\" | \"single-persist\" | \"none\", SelectionMode> =\n    \"none\";\n\n  /** When `true`, the component is selected.  */\n  @Prop({ reflect: true, mutable: true }) selected = false;\n\n  @Watch(\"selected\")\n  watchSelected(selected: boolean): void {\n    if (this.selectionMode === \"none\") {\n      return;\n    }\n    this.handleSelectionPropertyChange(selected);\n  }\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ChipMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ChipMessages;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * When true, enables the chip to be focused, and allows the `calciteChipSelect` to emit.\n   * This is set to `true` by a parent Chip Group component.\n   *\n   * @internal\n   */\n  @Prop() interactive = false;\n\n  /**\n   * @internal\n   */\n  @Prop() parentChipGroup: HTMLCalciteChipGroupElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteChipElement;\n\n  @State() defaultMessages: ChipMessages;\n\n  @State() effectiveLocale: string;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() private hasText = false;\n\n  @State() private hasImage = false;\n\n  private containerEl: HTMLDivElement;\n\n  private closeButtonEl: HTMLButtonElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the component's close button is selected.\n   */\n  @Event({ cancelable: false }) calciteChipClose: EventEmitter<void>;\n\n  /**\n   * Fires when the selected state of the component changes.\n   */\n  @Event({ cancelable: false }) calciteChipSelect: EventEmitter<void>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalChipKeyEvent: EventEmitter<KeyboardEvent>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalChipSelect: EventEmitter<void>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalSyncSelectedChips: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n    if (this.selectionMode !== \"none\" && this.interactive && this.selected) {\n      this.handleSelectionPropertyChange(this.selected);\n    }\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    if (isBrowser()) {\n      await setUpMessages(this);\n      this.updateHasText();\n    }\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"keydown\")\n  keyDownHandler(event: KeyboardEvent): void {\n    if (event.target === this.el) {\n      switch (event.key) {\n        case \" \":\n        case \"Enter\":\n          this.handleEmittingEvent();\n          event.preventDefault();\n          break;\n        case \"ArrowRight\":\n        case \"ArrowLeft\":\n        case \"Home\":\n        case \"End\":\n          this.calciteInternalChipKeyEvent.emit(event);\n          event.preventDefault();\n          break;\n      }\n    }\n  }\n\n  @Listen(\"click\")\n  clickHandler(): void {\n    if (!this.interactive && this.closable) {\n      this.closeButtonEl.focus();\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    if (!this.disabled && this.interactive) {\n      this.containerEl?.focus();\n    } else if (!this.disabled && this.closable) {\n      this.closeButtonEl?.focus();\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private handleDefaultSlotChange = (): void => {\n    this.updateHasText();\n  };\n\n  private close = (): void => {\n    this.calciteChipClose.emit();\n    this.selected = false;\n    this.closed = true;\n  };\n\n  private closeButtonKeyDownHandler = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      event.preventDefault();\n      this.close();\n    }\n  };\n\n  private updateHasText() {\n    this.hasText = this.el.textContent.trim().length > 0;\n  }\n\n  private handleSlotImageChange = (event: Event): void => {\n    this.hasImage = slotChangeHasAssignedElement(event);\n  };\n\n  private handleEmittingEvent = (): void => {\n    if (this.interactive) {\n      this.calciteChipSelect.emit();\n    }\n  };\n\n  private handleSelectionPropertyChange(selected: boolean): void {\n    if (this.selectionMode === \"single\") {\n      this.calciteInternalSyncSelectedChips.emit();\n    }\n    const selectedInParent = this.parentChipGroup.selectedItems.includes(this.el);\n\n    if (!selectedInParent && selected && this.selectionMode !== \"multiple\") {\n      this.calciteInternalChipSelect.emit();\n    }\n    if (this.selectionMode !== \"single\") {\n      this.calciteInternalSyncSelectedChips.emit();\n    }\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  renderChipImage(): VNode {\n    return (\n      <div class={CSS.imageContainer}>\n        <slot name={SLOTS.image} onSlotchange={this.handleSlotImageChange} />\n      </div>\n    );\n  }\n\n  renderSelectionIcon(): VNode {\n    const icon =\n      this.selectionMode === \"multiple\"\n        ? this.selected\n          ? ICONS.checkedMultiple\n          : ICONS.uncheckedMultiple\n        : this.selected\n          ? ICONS.checkedSingle\n          : undefined;\n\n    return (\n      <div\n        class={{\n          [CSS.selectIcon]: true,\n          [CSS.selectIconActive]: this.selectionMode === \"multiple\" || this.selected,\n        }}\n      >\n        {icon ? <calcite-icon icon={icon} scale={getIconScale(this.scale)} /> : null}\n      </div>\n    );\n  }\n\n  renderCloseButton(): VNode {\n    return (\n      <button\n        aria-label={this.messages.dismissLabel}\n        class={CSS.close}\n        onClick={this.close}\n        onKeyDown={this.closeButtonKeyDownHandler}\n        ref={(el) => (this.closeButtonEl = el)}\n        tabIndex={this.disabled ? -1 : 0}\n      >\n        <calcite-icon icon={ICONS.close} scale={getIconScale(this.scale)} />\n      </button>\n    );\n  }\n\n  renderIcon(): VNode {\n    return (\n      <calcite-icon\n        class={CSS.chipIcon}\n        flipRtl={this.iconFlipRtl}\n        icon={this.icon}\n        scale={getIconScale(this.scale)}\n      />\n    );\n  }\n\n  render(): VNode {\n    const { disabled } = this;\n    const disableInteraction = disabled || (!disabled && !this.interactive);\n    const role =\n      this.selectionMode === \"multiple\" && this.interactive\n        ? \"checkbox\"\n        : this.selectionMode !== \"none\" && this.interactive\n          ? \"radio\"\n          : this.interactive\n            ? \"button\"\n            : undefined;\n    return (\n      <Host>\n        <InteractiveContainer disabled={disabled}>\n          <div\n            aria-checked={\n              this.selectionMode !== \"none\" && this.interactive\n                ? toAriaBoolean(this.selected)\n                : undefined\n            }\n            aria-disabled={disableInteraction ? toAriaBoolean(disabled) : undefined}\n            aria-label={this.label}\n            class={{\n              [CSS.container]: true,\n              [CSS.textSlotted]: this.hasText,\n              [CSS.imageSlotted]: this.hasImage,\n              [CSS.selectable]: this.selectionMode !== \"none\",\n              [CSS.multiple]: this.selectionMode === \"multiple\",\n              [CSS.single]:\n                this.selectionMode === \"single\" || this.selectionMode === \"single-persist\",\n              [CSS.selected]: this.selected,\n              [CSS.closable]: this.closable,\n              [CSS.nonInteractive]: !this.interactive,\n              [CSS.isCircle]:\n                !this.closable &&\n                !this.hasText &&\n                (!this.icon || !this.hasImage) &&\n                (this.selectionMode === \"none\" ||\n                  (!!this.selectionMode && this.selectionMode !== \"multiple\" && !this.selected)),\n            }}\n            onClick={this.handleEmittingEvent}\n            ref={(el) => (this.containerEl = el)}\n            role={role}\n            tabIndex={disableInteraction ? -1 : 0}\n          >\n            {this.selectionMode !== \"none\" && this.renderSelectionIcon()}\n            {this.renderChipImage()}\n            {this.icon && this.renderIcon()}\n            <span class={CSS.title}>\n              <slot onSlotchange={this.handleDefaultSlotChange} />\n            </span>\n            {this.closable && this.renderCloseButton()}\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","export const CSS = {\n  icon: \"icon\",\n  flipRtl: \"flip-rtl\",\n};\n","import { CalciteIconPath } from \"@esri/calcite-ui-icons\";\nimport { getAssetPath } from \"@stencil/core\";\nimport { Scale } from \"../interfaces\";\nimport { IconNameOrString } from \"./interfaces\";\n\nexport interface FetchIconProps {\n  icon: IconNameOrString;\n  scale: Scale;\n}\n\n/**\n * Icon data cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const iconCache: Record<string, CalciteIconPath> = {};\n\n/**\n * Icon request cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const requestCache: Record<string, Promise<CalciteIconPath>> = {};\n\nexport const scaleToPx: Record<Scale, number> = {\n  s: 16,\n  m: 24,\n  l: 32,\n};\n\nfunction generateIconId({ icon, scale }: FetchIconProps): string {\n  const size = scaleToPx[scale];\n  const name = normalizeIconName(icon);\n  const filled = name.charAt(name.length - 1) === \"F\";\n  const iconName = filled ? name.substring(0, name.length - 1) : name;\n\n  return `${iconName}${size}${filled ? \"F\" : \"\"}`;\n}\n\nexport async function fetchIcon(props: FetchIconProps): Promise<CalciteIconPath> {\n  const cachedIconKey = generateIconId(props);\n  const cachedIconData = getCachedIconDataByKey(cachedIconKey);\n\n  if (cachedIconData) {\n    return cachedIconData;\n  }\n\n  if (!requestCache[cachedIconKey]) {\n    requestCache[cachedIconKey] = fetch(getAssetPath(`./assets/icon/${cachedIconKey}.json`))\n      .then((resp) => resp.json())\n      .catch(() => {\n        console.error(`\"${cachedIconKey}\" is not a valid calcite-ui-icon name`);\n        return \"\";\n      });\n  }\n\n  const path = await requestCache[cachedIconKey];\n  iconCache[cachedIconKey] = path;\n\n  return path;\n}\n\n/**\n * Util to retrieve cached icon data based on icon name and scale.\n *\n * @param props – icon properties\n */\nexport function getCachedIconData(props: FetchIconProps): CalciteIconPath {\n  return getCachedIconDataByKey(generateIconId(props));\n}\n\nfunction getCachedIconDataByKey(id: string): CalciteIconPath {\n  return iconCache[id];\n}\n\n/**\n * Normalize the icon name to match the path data module exports.\n * Exported for testing purposes.\n *\n * @param name – an icon name that can be either kebab or camel-cased\n * @private\n */\nexport function normalizeIconName(name: string): string {\n  const numberLeadingName = !isNaN(Number(name.charAt(0)));\n  const parts = name.split(\"-\");\n  const kebabCased = parts.length > 0;\n\n  if (kebabCased) {\n    const firstNonDigitInPartPattern = /[a-z]/i;\n\n    name = parts\n      .map((part, partIndex) => {\n        return part.replace(firstNonDigitInPartPattern, function replacer(match, offset) {\n          const isFirstCharInName = partIndex === 0 && offset === 0;\n\n          if (isFirstCharInName) {\n            return match;\n          }\n\n          return match.toUpperCase();\n        });\n      })\n      .join(\"\");\n  }\n\n  return numberLeadingName ? `i${name}` : name;\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-ui-icon-color: [Deprecated] Use --calcite-icon-color. Specifies the component's color. Defaults to `currentColor`.\n * @prop --calcite-icon-color: Specifies the component's color. Defaults to `currentColor`.\n */\n\n:host {\n  @apply text-color-icon inline-flex;\n}\n\n$icon-size-s: 16px;\n$icon-size-m: 24px;\n$icon-size-l: 32px;\n\n:host([scale=\"s\"]) {\n  inline-size: $icon-size-s;\n  block-size: $icon-size-s;\n  min-inline-size: $icon-size-s;\n  min-block-size: $icon-size-s;\n}\n\n:host([scale=\"m\"]) {\n  inline-size: $icon-size-m;\n  block-size: $icon-size-m;\n  min-inline-size: $icon-size-m;\n  min-block-size: $icon-size-m;\n}\n\n:host([scale=\"l\"]) {\n  inline-size: $icon-size-l;\n  block-size: $icon-size-l;\n  min-inline-size: $icon-size-l;\n  min-block-size: $icon-size-l;\n}\n\n.flip-rtl {\n  transform: scaleX(-1);\n}\n\n.svg {\n  @apply block;\n}\n\n@include base-component();\n","import { CalciteIconPath, CalciteMultiPathEntry } from \"@esri/calcite-ui-icons\";\nimport { Component, Element, h, Host, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { getElementDir, toAriaBoolean } from \"../../utils/dom\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale } from \"../interfaces\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { CSS } from \"./resources\";\nimport { fetchIcon, getCachedIconData, scaleToPx } from \"./utils\";\nimport { IconNameOrString } from \"./interfaces\";\n\n@Component({\n  tag: \"calcite-icon\",\n  styleUrl: \"icon.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Icon {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Displays a specific icon.\n   *\n   * @see [Icons](https://esri.github.io/calcite-ui-icons)\n   */\n  @Prop({\n    reflect: true,\n  })\n  icon: IconNameOrString = null;\n\n  /**\n   * When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`).\n   */\n  @Prop({\n    reflect: true,\n  })\n  flipRtl = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({\n    reflect: true,\n  })\n  scale: Scale = \"m\";\n\n  /**\n   * Accessible name for the component.\n   *\n   * It is recommended to set this value if your icon is semantic.\n   */\n  @Prop()\n  textLabel: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    if (!this.visible) {\n      this.waitUntilVisible(() => {\n        this.visible = true;\n        this.loadIconPathData();\n      });\n    }\n  }\n\n  disconnectedCallback(): void {\n    this.intersectionObserver?.disconnect();\n    this.intersectionObserver = null;\n  }\n\n  render(): VNode {\n    const { el, flipRtl, pathData, scale, textLabel } = this;\n    const dir = getElementDir(el);\n    const size = scaleToPx[scale];\n    const semantic = !!textLabel;\n    const paths = [].concat(pathData || \"\");\n    return (\n      <Host\n        aria-hidden={toAriaBoolean(!semantic)}\n        aria-label={semantic ? textLabel : null}\n        role={semantic ? \"img\" : null}\n      >\n        <svg\n          aria-hidden=\"true\"\n          class={{\n            [CSS.flipRtl]: dir === \"rtl\" && flipRtl,\n            svg: true,\n          }}\n          fill=\"currentColor\"\n          height=\"100%\"\n          viewBox={`0 0 ${size} ${size}`}\n          width=\"100%\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          {paths.map((path: string | CalciteMultiPathEntry) =>\n            typeof path === \"string\" ? (\n              <path d={path} />\n            ) : (\n              <path d={path.d} opacity={\"opacity\" in path ? path.opacity : 1} />\n            ),\n          )}\n        </svg>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteIconElement;\n\n  private intersectionObserver: IntersectionObserver;\n\n  @State()\n  private pathData: CalciteIconPath;\n\n  @State()\n  private visible = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"icon\")\n  @Watch(\"scale\")\n  private async loadIconPathData(): Promise<void> {\n    const { icon, scale, visible } = this;\n\n    if (!isBrowser() || !icon || !visible) {\n      return;\n    }\n\n    const fetchIconProps = { icon, scale };\n    const pathData = getCachedIconData(fetchIconProps) || (await fetchIcon(fetchIconProps));\n\n    // While the fetchIcon method is awaiting response, the icon requested can change. This check is to verify the response received belongs to the current icon.\n    if (icon !== this.icon) {\n      return;\n    }\n\n    this.pathData = pathData;\n  }\n\n  private waitUntilVisible(callback: () => void): void {\n    this.intersectionObserver = createObserver(\n      \"intersection\",\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            this.intersectionObserver.disconnect();\n            this.intersectionObserver = null;\n            callback();\n          }\n        });\n      },\n      { rootMargin: \"50px\" },\n    );\n\n    if (!this.intersectionObserver) {\n      callback();\n      return;\n    }\n\n    this.intersectionObserver.observe(this.el);\n  }\n}\n","import { getAssetPath } from \"@stencil/core\";\nimport { getSupportedLocale, LocalizedComponent } from \"./locale\";\nimport { isBrowser } from \"./browser\";\n\nexport type MessageBundle = Record<string, string>;\n\nexport const componentLangToMessageBundleCache: Record<string, Promise<MessageBundle>> = {};\n\nasync function getMessageBundle(lang: string, component: string): Promise<MessageBundle> {\n  const key = `${component}_${lang}`;\n\n  if (componentLangToMessageBundleCache[key]) {\n    return componentLangToMessageBundleCache[key];\n  }\n\n  componentLangToMessageBundleCache[key] = fetch(getAssetPath(`./assets/${component}/t9n/messages_${lang}.json`))\n    .then((resp) => {\n      if (!resp.ok) {\n        throwMessageFetchError();\n      }\n      return resp.json();\n    })\n    .catch(() => throwMessageFetchError());\n\n  return componentLangToMessageBundleCache[key];\n}\n\nfunction throwMessageFetchError(): never {\n  throw new Error(\"could not fetch component message bundle\");\n}\n\nfunction mergeMessages(component: T9nComponent): void {\n  component.messages = {\n    ...component.defaultMessages,\n    ...component.messageOverrides,\n  };\n}\n\nfunction noop(): void {\n  // intentionally empty\n}\n\n/**\n * This utility sets up the messages used by the component. It should be awaited in the `componentWillLoad` lifecycle hook.\n *\n * @param component\n */\nexport async function setUpMessages(component: T9nComponent): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, component.effectiveLocale);\n  mergeMessages(component);\n}\n\nasync function fetchMessages(component: T9nComponent, lang: string): Promise<MessageBundle> {\n  if (!isBrowser()) {\n    return {};\n  }\n\n  const { el } = component;\n  const tag = el.tagName.toLowerCase();\n  const componentName = tag.replace(\"calcite-\", \"\");\n\n  return getMessageBundle(getSupportedLocale(lang, \"t9n\"), componentName);\n}\n\n/**\n * This utility must be set up for the component to update its default message bundle if the locale changes.\n *\n * It can be set up in **either** of the following ways:\n *\n * 1. called from `LocalizedComponent`'s `onLocaleChange` method or\n * 2. called from a watcher configured to watch `LocalizedComponent`'s `effectiveLocale` prop\n *\n * @param component\n * @param lang\n */\nexport async function updateMessages(component: T9nComponent, lang: string): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, lang);\n  mergeMessages(component);\n}\n\n/**\n * This utility sets up internals for messages support.\n *\n * It needs to be called in `connectedCallback`\n *\n * **Note**: this must be called after `LocalizedComponent`'s `connectLocalized` method.\n *\n * @param component\n */\nexport function connectMessages(component: T9nComponent): void {\n  component.onMessagesChange = defaultOnMessagesChange;\n}\n\n/**\n * This utility tears down internals for messages support.\n *\n * It needs to be called in `disconnectedCallback`\n *\n * @param component\n */\nexport function disconnectMessages(component: T9nComponent): void {\n  // we set this to noop to for watchers triggered when components are disconnected\n  component.onMessagesChange = noop;\n}\n\n/**\n * This interface enables components to support built-in translation strings.\n *\n * **Notes**:\n *\n * This requires `LocalizedComponent` to be implemented.\n * To avoid unnecessary lookups, composite components should set `lang` on internal t9n components.\n */\nexport interface T9nComponent extends LocalizedComponent {\n  el: HTMLElement;\n\n  /**\n   * This property holds all messages used by the component's rendering.\n   *\n   * This prop should use the `@Prop` decorator. It uses `@Prop` decorator for testing purpose only.\n   */\n  messages: MessageBundle;\n\n  /**\n   * This property holds the component's default messages.\n   */\n  defaultMessages: MessageBundle;\n\n  /**\n   * This property holds all user message overrides.\n   *\n   * This prop should use the `@Prop` decorator.\n   */\n  messageOverrides: Partial<MessageBundle>;\n\n  /**\n   * This private method ensures messages are kept in sync.\n   *\n   * This method should be empty and configured to watch for changes on  `messageOverrides` property.\n   *\n   * @Watch(\"messageOverrides\")\n   * onMessagesChange(): void {\n   *  \\/* wired up by t9n util *\\/\n   * }\n   */\n  onMessagesChange: () => void;\n}\n\nfunction defaultOnMessagesChange(this: T9nComponent): void {\n  mergeMessages(this);\n}\n"],"names":["CSS","title","close","imageContainer","chipIcon","textSlotted","container","imageSlotted","closable","multiple","single","selectable","selectIcon","selectIconActive","nonInteractive","isCircle","selected","SLOTS","image","ICONS","checkedSingle","uncheckedMultiple","checkedMultiple","chipCss","CalciteChipStyle0","Chip","proxyCustomElement","HTMLElement","handleDefaultSlotChange","this","updateHasText","calciteChipClose","emit","closed","closeButtonKeyDownHandler","event","isActivationKey","key","preventDefault","handleSlotImageChange","hasImage","slotChangeHasAssignedElement","handleEmittingEvent","interactive","calciteChipSelect","watchSelected","selectionMode","handleSelectionPropertyChange","onMessagesChange","effectiveLocaleChange","updateMessages","effectiveLocale","connectedCallback","connectInteractive","connectLocalized","connectMessages","componentDidLoad","setComponentLoaded","componentDidRender","updateHostInteraction","disconnectedCallback","disconnectInteractive","disconnectLocalized","disconnectMessages","componentWillLoad","setUpLoadableComponent","isBrowser","setUpMessages","keyDownHandler","target","el","calciteInternalChipKeyEvent","clickHandler","closeButtonEl","focus","setFocus","componentFocusable","disabled","containerEl","hasText","textContent","trim","length","calciteInternalSyncSelectedChips","selectedInParent","parentChipGroup","selectedItems","includes","calciteInternalChipSelect","renderChipImage","h","class","name","onSlotchange","renderSelectionIcon","icon","undefined","scale","getIconScale","renderCloseButton","messages","dismissLabel","onClick","onKeyDown","ref","tabIndex","renderIcon","flipRtl","iconFlipRtl","render","disableInteraction","role","Host","InteractiveContainer","toAriaBoolean","label","iconCache","requestCache","scaleToPx","s","m","l","generateIconId","size","normalizeIconName","filled","charAt","iconName","substring","async","fetchIcon","props","cachedIconKey","cachedIconData","getCachedIconDataByKey","fetch","getAssetPath","then","resp","json","catch","console","error","path","getCachedIconData","id","numberLeadingName","isNaN","Number","parts","split","kebabCased","firstNonDigitInPartPattern","map","part","partIndex","replace","match","offset","isFirstCharInName","toUpperCase","join","iconCss","CalciteIconStyle0","Icon","visible","waitUntilVisible","loadIconPathData","intersectionObserver","disconnect","pathData","textLabel","dir","getElementDir","semantic","paths","concat","svg","fill","height","viewBox","width","xmlns","d","opacity","fetchIconProps","callback","createObserver","entries","forEach","entry","isIntersecting","rootMargin","observe","componentLangToMessageBundleCache","getMessageBundle","lang","component","ok","throwMessageFetchError","Error","mergeMessages","defaultMessages","messageOverrides","noop","fetchMessages","tag","tagName","toLowerCase","componentName","getSupportedLocale","defaultOnMessagesChange"],"sourceRoot":""}